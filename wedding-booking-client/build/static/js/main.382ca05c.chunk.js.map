{"version":3,"sources":["images/no-img.jpg","images/logo-mare.png","util/AuthRoute.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/DeleteScream.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/LikeButton.js","components/scream/ScreamDialog.js","components/scream/EditScream.js","components/scream/BookScream.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","components/scream/SuggestScreamDialog.js","pages/home.js","components/scream/Booking.js","pages/bookings.js","pages/login.js","pages/signup.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","components/profile/StaticProfile.js","pages/user.js","pages/suggestPackage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","connect","state","authenticated","user","Component","component","rest","render","props","to","initialState","loading","credentials","likes","notifications","bookings","screams","scream","package","errors","middleware","thunk","reducers","combineReducers","action","type","payload","username","screamId","filter","like","forEach","notification","read","data","index","findIndex","commentsAll","comments","indexDel","splice","indexEdit","body","name","price","busyDates","indexBook","push","date","indexComm","commentCount","UI","store","createStore","composeWithDevTools","applyMiddleware","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","getScreams","getScream","uploadMultipleImages","formData","post","response","clearErrors","DeleteScream","open","handleOpen","setState","handleClose","deleteScream","classes","this","MyButton","deleteButton","color","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","Button","delete","withStyles","position","left","top","Comments","Grid","container","map","comment","createdAt","userImage","key","item","sm","src","alt","commentImage","commentData","Typography","variant","Link","dayjs","format","invisibleSeparator","length","visibleSeparator","height","objectFit","borderRadius","marginLeft","width","borderBottom","marginBottom","border","margin","CommentForm","submitted","handleChange","event","target","value","handleSubmit","preventDefault","submitComment","nextProps","style","textAlign","onSubmit","TextField","label","error","helperText","onChange","textField","button","CircularProgress","size","progressSpinner","marginTop","LikeButton","likedScream","find","likeScream","unlikeScream","mapActionsToProps","ScreamDialog","oldPath","newPath","window","location","pathname","history","pushState","openDialog","photos","category","likeCount","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","bodyText","slide","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","photo","photosPost","expandButton","closeButton","DialogContent","dialogContent","padding","minWidth","EditScream","editScream","handleDayClick","day","selected","selectedIndex","selectedDay","Date","parse","transformDate","placeholder","multiline","rows","divText","dayPicker","disabledDays","before","selectedDays","onDayClick","submitButton","disabled","editButton","screamEdit","BookScream","alreadyBooked","bookScreamOpen","dateTransformed","toISOString","bookScream","bookButton","booking","Scream","checkDateIsNotBusy","onlyDate","isBusy","dateB","onlyDateB","split","extend","relativeTime","dateTag","priceTag","categoryTag","priceTagNo","parseInt","priceNo","getTime","Card","card","CardMedia","image","CardContent","content","fromNow","userType","toString","display","EditDetails","bio","website","phone","mapUserDetailsToState","userDetails","editUserDetails","float","paper","profile","verticalAlign","cursor","buttons","backgroundColor","fullLine","halfLine","halfWrapper","Paper","NoImg","Profile","handleImageChange","files","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","prevProps","imageUrl","email","id","hidden","href","rel","align","cardContent","fledDirection","cover","Array","from","SuggestScreamDialog","music","entertainment","others","suggestionType","handleCheckedChange","checked","noneSelected","handleCategoryChange","handleDateChange","catgeory","criterias","buttonSubmit","screamMarkup","progress","xs","utils","DateFnsUtils","disablePast","FormControl","formControlSuggestion","InputLabel","Select","MenuItem","formControl","suggestButton","startIcon","minHeight","home","recentScreamsMarkup","htmlFor","native","Booking","goodBooking","recentBookingsMarkup","login","userData","password","loginUser","form","AppIcon","noValidate","general","customError","FBIdToken","token","setItem","maxHeight","fontSize","signup","newUserData","confirmPassword","signupUser","labelId","PostScream","postScream","DateUtils","isSameDay","onDrop","picture","withPreview","withIcon","buttonText","imgExtension","maxFileSize","newScream","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","notif","notificationId","markNotificationsRead","notificationsIcon","Badge","badgeContent","notificationsMarkup","verb","time","iconColor","icon","marginRight","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationIds","Navbar","AppBar","Toolbar","screamIdParam","match","params","screamsMarkup","suggestPackage","suggestPackageScreams","pkg","firstPackage","secondPackage","v","table","Object","keys","TableContainer","tableContainer","Table","aria-label","TableHead","head","TableRow","TableCell","TableBody","choice","scope","aria-labelledby","aria-describedby","DialogContentText","autoFocus","smallGrid","required","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","budget","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","baseURL","jwtDecode","exp","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.382ca05c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-img.d66c8dc3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-mare.013ea435.png\";","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({component: Component, authenticated, ...rest}) => (\r\n    <Route\r\n    {...rest}\r\n    render={(props) => authenticated === true ? <Redirect to='/'/> : <Component {...props}/>}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import {SET_AUTHENTICATED, SET_UNAUTHENTICATED, SET_USER, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ, SET_BOOKINGS, BOOK_SCREAM} from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: [],\r\n    bookings: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        username: state.credentials.username,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\r\n            }\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(notification => notification.read = true);\r\n            return {\r\n                ...state\r\n            }\r\n        case BOOK_SCREAM:\r\n            return{\r\n                ...state,\r\n                bookings: [\r\n                    action.payload,\r\n                    ...state.bookings]\r\n            }\r\n        case SET_BOOKINGS:\r\n            return{\r\n                ...state,\r\n                bookings: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_PACKAGE, SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM} from '../types';\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    package: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_SCREAM:\r\n            return{\r\n                ...state,\r\n                scream: action.payload\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                let commentsAll = state.scream.comments;\r\n                state.scream = action.payload;\r\n                state.scream.comments = commentsAll;\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_SCREAM:\r\n            let indexDel = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            state.screams.splice(indexDel, 1);\r\n            return {\r\n                ...state,\r\n            }\r\n        case EDIT_SCREAM:\r\n            let indexEdit = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                state.scream.body = action.payload.body;\r\n                state.scream.name = action.payload.name;\r\n                state.scream.price = action.payload.price;\r\n                state.scream.busyDates = action.payload.busyDates;\r\n            }\r\n            state.screams[indexEdit] = state.scream;\r\n            return {\r\n                ...state\r\n            }\r\n        case BOOK_SCREAM:\r\n            let indexBook = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[indexBook].busyDates.push(action.payload.date);\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            let indexComm = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[indexComm].commentCount = action.payload.commentCount;\r\n            state.scream.commentCount = action.payload.commentCount;\r\n            return {\r\n                ...state,\r\n                screams: state.screams,\r\n                scream: {\r\n                    ...state.scream,\r\n                    comments: [\r\n                        action.payload,\r\n                        ...state.scream.comments\r\n                    ]\r\n                }\r\n            }\r\n        case SET_PACKAGE:\r\n            return {\r\n                ...state,\r\n                package: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                errors: null\r\n            }\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case STOP_LOADING_UI:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)\r\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n ))\r\n\r\nexport default store;","// User Reducer types\r\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const LOADING_USER = \"LOADING_USER\";\r\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\r\n\r\n//UI  reducer types\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const LOADING_UI = \"LOADING_UI\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const LOADING_DATA = \"LOADING_DATA\";\r\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\r\n\r\n//Data reducer types\r\nexport const SET_SCREAMS = \"SET_SCREAMS\";\r\nexport const SET_SCREAM = \"SET_SCREAM\";\r\nexport const LIKE_SCREAM = \"LIKE_SCREAM\";\r\nexport const UNLIKE_SCREAM = \"UNLIKE_SCREAM\";\r\nexport const DELETE_SCREAM = \"DELETE_SCREAM\";\r\nexport const POST_SCREAM = \"POST_SCREAM\";\r\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\r\nexport const EDIT_SCREAM = \"EDIT_SCREAM\";\r\nexport const BOOK_SCREAM = \"BOOK_SCREAM\";\r\nexport const SET_BOOKINGS = \"SET_BOOKINGS\";\r\nexport const SET_PACKAGE = \"SET_PACKAGE\";\r\n\r\n","import {SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ, SET_BOOKINGS} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/login', userData)\r\n       .then((res) => {\r\n           const FBIdToken = `Bearer ${res.data.token}`;\r\n           localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n           axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n           dispatch(getUserData());\r\n           dispatch({type: CLEAR_ERRORS});\r\n           history.push('/');\r\n       })\r\n       .catch(err => {\r\n           console.log(err);\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n       });\r\n}\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/signup', newUserData)\r\n       .then((res) => {\r\n           const FBIdToken = `Bearer ${res.data.token}`;\r\n           localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n           axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n           dispatch(getUserData());\r\n           dispatch({type: CLEAR_ERRORS});\r\n           history.push('/');\r\n       })\r\n       .catch(err => {\r\n           console.log(err);\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n       });\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({type: SET_UNAUTHENTICATED});\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    axios.get('/user')\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_USER,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({type:LOADING_USER});\r\n    axios.post('user/image', formData)\r\n    .then(() => {\r\n        dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    axios.post('/user', userDetails)\r\n    .then(() => {\r\n        dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n    axios.post('/notifications', notificationIds)\r\n    .then(res => {\r\n        dispatch({\r\n            type: MARK_NOTIFICATIONS_READ\r\n        })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n\r\n//Get all bookings\r\nexport const getBookings = (username) => (dispatch) => {\r\n    axios.get(`/bookings/${username}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_BOOKINGS,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err =>{\r\n        dispatch({\r\n            type: SET_BOOKINGS,\r\n            payload: []\r\n        })\r\n    })\r\n}","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({children, onClick, tip, btnClassName, tipClassName}) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n)\r\n","import {SET_PACKAGE, SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM,\r\n     LOADING_UI, POST_SCREAM, CLEAR_ERRORS, SET_ERRORS,STOP_LOADING_UI, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM} from '../types';\r\nimport axios from 'axios';\r\n\r\n//Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get('/screams')\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err =>{\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: []\r\n        })\r\n    })\r\n}\r\n\r\nexport const getScream = (screamId) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.get(`/scream/${screamId}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAM,\r\n            payload: res.data\r\n        });\r\n        dispatch({\r\n            type: STOP_LOADING_UI\r\n        });\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n//Post a scream\r\nexport const postScream = (newScream, photos) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/scream', newScream)\r\n    .then(res => {\r\n        dispatch({\r\n            type: POST_SCREAM,\r\n            payload: res.data\r\n        });\r\n        dispatch(clearErrors());\r\n        return res.data;\r\n    })\r\n    .then((res) => {\r\n        if (photos.length > 0 && photos[0].length > 0){\r\n            const formData = new FormData();\r\n            photos[0].forEach((photo, index) => {\r\n                formData.append('image' + index, photo, photo.name);\r\n            })\r\n            dispatch(uploadMultipleImages(res.screamId, formData));\r\n        }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    })\r\n}\r\n\r\nexport const uploadMultipleImages = (screamId, formData) => (dispatch) => {\r\n    axios.post(`/scream/${screamId}/photos`, formData)\r\n    .then(() => {\r\n        dispatch(getScream(screamId));\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    })\r\n}\r\n\r\n//Like a scream\r\nexport const likeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/like`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: LIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Unlike a scream\r\nexport const unlikeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/unlike`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: UNLIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n    dispatch({type: LOADING_UI})\r\n    axios.post(`/scream/${screamId}/comment`, commentData)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SUBMIT_COMMENT,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n} \r\n\r\nexport const editScream = (screamId, screamEdit) => (dispatch) => {\r\n    dispatch({type: LOADING_UI})\r\n    axios.post(`/scream/${screamId}/edit`, screamEdit)\r\n    .then(res => {\r\n        dispatch({\r\n            type: EDIT_SCREAM,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n} \r\n\r\nexport const bookScream = (screamId, booking) => (dispatch) => {\r\n    axios.post(`/scream/${screamId}/book`, booking)\r\n    .then(res => {\r\n        dispatch({\r\n            type: BOOK_SCREAM,\r\n            payload: res.data\r\n        })\r\n        dispatch(getScreams());\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n} \r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n        dispatch({\r\n            type: DELETE_SCREAM,\r\n            payload: screamId\r\n            })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const getUserData = (username) => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get(`/user/${username}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data.screams\r\n        });\r\n    })\r\n    .catch(() => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: null\r\n        })\r\n    })\r\n}\r\n\r\nexport const suggestPackageScreams = (criterias) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post(`/screams/suggestPackage`, criterias)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_PACKAGE,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n        dispatch({\r\n            type: SET_PACKAGE,\r\n            payload: []\r\n        })\r\n    })\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({type: CLEAR_ERRORS});\r\n}","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {deleteScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n    }\r\n}\r\n\r\nexport class DeleteScream extends Component {\r\n\r\n    state = {\r\n        open: false\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"Delete Scream\" onClick={this.handleOpen} btnClassName={classes.deleteButton}>\r\n                    <DeleteOutline color=\"secondary\"/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <DialogTitle>\r\n                        Are you sure you want to delete this post?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.deleteScream} color=\"secondary\">\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteScream})(withStyles(styles)(DeleteScream));\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\n//Mui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    }\r\n}\r\n\r\nclass Comments extends Component {\r\n\r\n    render(){\r\n        const { classes, comments } = this.props;\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const {body, createdAt, userImage, username} = comment;\r\n                    return(\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography variant=\"h5\" component={Link} to={`users/${username}`}\r\n                                            color=\"primary\">\r\n                                                {username}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeparator}/>\r\n                                            <Typography variant=\"body1\">\r\n                                                {body}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length - 1 && (\r\n                                <hr className={classes.visibleSeparator}/>\r\n                            )}\r\n                        </Fragment>\r\n\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\n//MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {submitComment, getScreams} from '../../redux/actions/dataActions'; \r\n\r\nconst styles = {\r\n    button: {\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n}\r\n\r\nexport class CommentForm extends Component {\r\n    state = {\r\n        body: '',\r\n        errors: {},\r\n        submitted: false\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors});\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({body: ''});\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.screamId, {body: this.state.body});\r\n        // this.props.getScreams();\r\n    }\r\n\r\n    render() {\r\n        const {classes, authenticated, UI: {loading}} = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{textAlign: 'center'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField name=\"body\" type=\"text\" label=\"Comment on post\" error={errors.comment ? true : false}\r\n                     helperText={errors.comment} value={this.state.body} onChange={this.handleChange} fullWidth className={classes.textField}/>\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                        Submit\r\n                        {loading && (\r\n                                 <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                             )}\r\n                    </Button>\r\n                </form>\r\n                <hr className={classes.visibleSeparator}/>\r\n            </Grid>\r\n        ) : null\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment : PropTypes.func.isRequired,\r\n    getScreams : PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {submitComment, getScreams})(withStyles(styles)(CommentForm));\r\n","import React, { Component } from 'react'\r\nimport MyButton from '../../util/MyButton';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//Icons\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'; \r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'; \r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {likeScream, unlikeScream} from '../../redux/actions/dataActions';\r\n\r\nexport class LikeButton extends Component {\r\n\r\n    likedScream = () =>{\r\n        if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.screamId)){\r\n            return true;\r\n        }\r\n        return false;\r\n    } \r\n\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    }\r\n\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    }\r\n\r\n    render() {\r\n        const {authenticated} = this.props.user;\r\n        const likeButton = !authenticated ? (\r\n            <Link to=\"/login\">\r\n            <MyButton tip=\"Like\">\r\n                    <FavoriteBorder color=\"primary\"/>\r\n            </MyButton>\r\n            </Link>\r\n        ) : (\r\n            this.likedScream() ? (\r\n                <MyButton tip=\"UnLike\" onClick={this.unlikeScream}>\r\n                    <FavoriteIcon color=\"primary\"/>\r\n                </MyButton>\r\n            ) : (\r\n                <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n                    <FavoriteBorder color=\"primary\"/>\r\n                </MyButton>\r\n            )\r\n        )\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    likeScream, \r\n    unlikeScream\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Comments from './Comments'\r\nimport CommentForm from './CommentForm';\r\n\r\nimport { Slide } from 'react-slideshow-image';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LikeButton from './LikeButton';\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, clearErrors, getScreams, getUserData} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 10\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    },\r\n    slide: {\r\n        objectFit: 'cover',\r\n        width: '100%',\r\n        height: '300px'\r\n    },\r\n    photosPost: {\r\n        minWidth: '100%',\r\n        height: 300,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass ScreamDialog extends Component{\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open:false});   \r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        if (this.state.oldPath === '/')\r\n            this.props.getScreams();\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const properties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            infinite: true,\r\n            indicators: true,\r\n            arrows: true,\r\n            pauseOnHover: true,\r\n        }\r\n        const {classes, scream : {photos, name, category, price, screamId, body, createdAt, likeCount, commentCount, userImage, username, comments},\r\n         UI: {loading}} = this.props;\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n             <Grid container spacing={4}>\r\n                 <Grid item sm={5}>\r\n                     <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\r\n                 </Grid>\r\n                 <Grid item sm={7}>\r\n                    <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${username}`}>\r\n                        {username}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">{name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">\r\n                        {body}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">Category: {category}</Typography>\r\n                    <Typography variant=\"h6\">Price: {price} €</Typography>\r\n                    <LikeButton screamId={screamId}/>\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                 </Grid>\r\n                 {photos && photos.length > 0 && (\r\n                     <Slide className={classes.slide} {...properties}>\r\n                         {photos.map((photo) => {return(\r\n                            <div key={photo} className=\"each-slide\">\r\n                                <img className={classes.photosPost} src={photo} alt=\"Presentation\"/>\r\n                            </div>\r\n                         )})}\r\n                    </Slide>\r\n                 )}\r\n                 <hr className={classes.visibleSeparator}/>\r\n                 <CommentForm screamId={screamId}/>\r\n                 <Comments comments={comments}/>\r\n             </Grid>\r\n         )\r\n\r\n         return (\r\n             <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Expand Post\" tipClassName={classes.expandButton}>\r\n                     <UnfoldMore color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n         )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    getScreams: PropTypes.func.isRequired,\r\n    getUserData: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScreams,\r\n    getScream,\r\n    clearErrors,\r\n    getUserData,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, editScream, clearErrors} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '90%'\r\n    },\r\n    editButton: {\r\n        position: 'absolute',\r\n        left: '84%',\r\n        top: '10%',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    divText: {\r\n        marginTop: '10px',\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 10\r\n    },\r\n}\r\n\r\nclass EditScream extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: '',\r\n        name: '',\r\n        body: '',\r\n        price: '',\r\n        busyDates: [],\r\n        errors: {}\r\n    };\r\n\r\n    // componentDidMount(){\r\n    //     if(this.props.openDialog){\r\n    //         this.handleOpen();\r\n    //     }\r\n    // }\r\n\r\n    componentWillReceiveProps(){\r\n        const {scream : {name, body, price, busyDates}} = this.props;\r\n        this.setState({\r\n            name: name,\r\n            body: body, \r\n            price: price, \r\n            busyDates: busyDates});\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.editScream(this.props.screamId, {\r\n            name: this.state.name,\r\n            body: this.state.body,\r\n            price: this.state.price,\r\n            busyDates: this.state.busyDates,\r\n        });\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n \r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({open:false});\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    handleDayClick = (day, { selected }) => {\r\n        const { busyDates } = this.state;\r\n        if (selected) {\r\n          const selectedIndex = busyDates.findIndex(selectedDay =>\r\n            Date.parse(selectedDay) === Date.parse(day)\r\n          );\r\n          busyDates.splice(selectedIndex, 1);\r\n        } else {\r\n          busyDates.push(day);\r\n        }\r\n        this.setState({ busyDates });\r\n      }\r\n\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        const {classes, UI: {loading}} = this.props;\r\n        let transformDate = [];\r\n        if (this.state.busyDates){\r\n            this.state.busyDates.forEach(date => {\r\n                transformDate.push(new Date(date));   \r\n            })\r\n        }\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <TextField name=\"name\" type=\"text\" label=\"Edit Name\" placeholder=\"Edit Name\" value={this.state.name} error={errors.name ? true : false}\r\n                helperText={errors.name} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <TextField name=\"body\" type=\"text\" label=\"Edit Body\" multiline rows=\"3\" placeholder=\"Edit Body\" value={this.state.body} error={errors.body ? true : false}\r\n                helperText={errors.body} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <TextField name=\"price\" type=\"text\" label=\"Edit Price\" placeholder=\"€\" value={this.state.price} error={errors.price ? true : false}\r\n                helperText={errors.price} className={classes.textField} onChange={this.handleChange}/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <div className={classes.divText}>\r\n                    <span>Choose the dates that you are not available:</span>\r\n                </div>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <DayPicker className={classes.dayPicker} disabledDays={{ before: new Date() }} selectedDays={transformDate} onDayClick={this.handleDayClick}/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                Submit\r\n                {loading && (\r\n                    <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                )}\r\n                </Button>\r\n            </form>\r\n         )\r\n\r\n\r\n         return (\r\n            <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Edit Post\" tipClassName={classes.editButton}>\r\n                     <Edit color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditScream.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    editScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    editScream,\r\n    clearErrors,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(EditScream));\r\n","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bookScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    bookButton: {\r\n        marginLeft: 20,\r\n        minWidth: 92,\r\n    },\r\n}\r\n\r\nclass BookScream extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        alreadyBooked: false\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    bookScreamOpen = () => {\r\n        const {user, date, screamId} = this.props;\r\n        const dateTransformed = (new Date(date)).toISOString();\r\n        this.props.bookScream(screamId, {\r\n            username: user.credentials.username,\r\n            date: dateTransformed\r\n            });\r\n        this.setState({open: false, alreadyBooked: true});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {alreadyBooked} = this.state;\r\n        const {classes, date, price} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleOpen} className={classes.bookButton} disabled={alreadyBooked}> \r\n                BOOK IT\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <DialogTitle>\r\n                        Are you sure you want to book this service in {dayjs(new Date(date)).format('DD MMMM YYYY')} for {price}€?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.bookScreamOpen} color=\"primary\">\r\n                            Book\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nBookScream.propTypes = {\r\n    bookScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    date: PropTypes.string,\r\n    price: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {bookScream})(withStyles(styles)(BookScream));","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport EditScream from './EditScream';\r\nimport LikeButton from './LikeButton';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n//Icons\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport BookScream from './BookScream';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n\r\n    checkDateIsNotBusy = (busyDates, date) => {\r\n        let onlyDate = dayjs(date).format('YYYY-MM-DD');\r\n        let isBusy = false;\r\n        busyDates.forEach((dateB) => {\r\n            let onlyDateB = dateB.split('T');\r\n\r\n            if (onlyDate === onlyDateB[0]){\r\n                isBusy = true;\r\n            }\r\n        })\r\n        return isBusy;\r\n    }\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const {classes, dateTag, priceTag, categoryTag, scream : {name, price, category, busyDates, body, createdAt, userImage, username, screamId, likeCount, commentCount},\r\n        user: {authenticated, credentials}} = this.props;\r\n        let priceTagNo = parseInt(priceTag, 10);\r\n        let priceNo = parseInt(price, 10);\r\n        \r\n        const deleteButton = authenticated && username === credentials.username ? (\r\n            <DeleteScream screamId={screamId}/>\r\n        ) : null\r\n\r\n        const editButton = authenticated && username === credentials.username ? (\r\n            <EditScream screamId={screamId} username={username} openDialog={this.props.openDialog}/>\r\n        ) : null\r\n\r\n        const goodScream = (((categoryTag === 'All' || categoryTag === category) && (dateTag.getTime() <= (new Date()).getTime() || (!this.checkDateIsNotBusy(busyDates, dateTag))) && (priceTag === '' || priceTagNo > priceNo)) || (!dateTag && !priceTag && !categoryTag)) ?\r\n        (<Card className={classes.card}>\r\n            <CardMedia image={userImage} title=\"Profile Picture\" className={classes.image}/>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"h5\" component={Link} to={`/users/${username}`} color=\"primary\">{username}</Typography>\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                {editButton}\r\n                {deleteButton}\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                <Typography className={classes.bodyText} variant=\"body1\">{body}</Typography>\r\n                <Typography variant=\"h6\">Price: {price} €</Typography>\r\n                <LikeButton screamId={screamId}/>\r\n                <span>{likeCount} Likes</span>\r\n                <MyButton tip=\"Comments\">\r\n                    <ChatIcon color=\"primary\"/>\r\n                </MyButton>\r\n                <span>{commentCount} Comments</span>\r\n                {credentials.userType === 'Married To Be' ? (<BookScream screamId={screamId} date={dateTag && dateTag.toString()} price={price}/>) : null}\r\n                <ScreamDialog screamId={screamId} username={username} openDialog={this.props.openDialog}/>\r\n            </CardContent>\r\n        </Card>) : null\r\n            \r\n        return (\r\n            goodScream\r\n        )\r\n    }\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    dateTag: PropTypes.object,\r\n    priceTag: PropTypes.string,\r\n    categoryTag: PropTypes.string,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {editUserDetails} from '../../redux/actions/userActions';\r\n\r\nconst styles = {\r\n    button: {\r\n        float: 'right'\r\n    }\r\n}\r\n\r\nexport class EditDetails extends Component {\r\n\r\n    state = {\r\n        bio: \"\",\r\n        website: \"\",\r\n        location: \"\",\r\n        phone: \"\",\r\n        open: false\r\n    }\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : '',\r\n            phone: credentials.phone ? credentials.phone : '',\r\n        })\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true});\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location,\r\n            phone: this.state.phone,\r\n        }\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open:false});\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {credentials} = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n           <Fragment>\r\n               <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\r\n                    <EditIcon color=\"primary\"/>\r\n                </MyButton>\r\n               <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                   <DialogTitle>\r\n                       Edit your details\r\n                   </DialogTitle>\r\n                   <DialogContent>\r\n                       <form>\r\n                            <TextField name=\"bio\" type=\"text\" label=\"Bio\" multiline rows=\"3\" placeholder=\"A short bio about yourself\"\r\n                            className={classes.textField} value={this.state.bio} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"website\" type=\"text\" label=\"Website\" placeholder=\"Your personal website\"\r\n                            className={classes.website} value={this.state.website} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"location\" type=\"text\" label=\"Location\" placeholder=\"Where you live\"\r\n                            className={classes.location} value={this.state.location} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"phone\" type=\"text\" label=\"Phone\" placeholder=\"What is your phone number\"\r\n                            className={classes.phone} value={this.state.phone} onChange={this.handleChange} fullWidth/>\r\n                       </form>\r\n                   </DialogContent>\r\n                   <DialogActions>\r\n                       <Button onClick={this.handleClose} color=\"primary\">\r\n                           Cancel\r\n                       </Button>\r\n                       <Button onClick={this.handleSubmit} color=\"primary\">\r\n                           Save\r\n                       </Button>\r\n                   </DialogActions>\r\n               </Dialog>\r\n           </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport NoImg from '../images/no-img.jpg';\r\n\r\n//Mui\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Icons\r\n// import LocationOn from '@material-ui/icons/LocationOn';\r\n// import LinkIcon from '@material-ui/icons/Link';\r\n// import CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding: 20\r\n      },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n    buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      },\r\n    username: {\r\n        height: 20,\r\n        backgroundColor: \"#00bcd4\",\r\n        width: 60,\r\n        margin: '0 auto 7px auto'\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        width: '100%',\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        width: '50%',\r\n        marginBottom: 10\r\n    },\r\n    halfWrapper: {\r\n        width: '150px',\r\n        margin: 'auto'\r\n    }\r\n    \r\n}\r\n\r\nconst ProfileSkeleton = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={NoImg} alt=\"Profile\" className=\"profile-image\" />\r\n                </div>\r\n                <hr/>\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.username}/>\r\n                    <hr/>\r\n                    <div className={classes.fullLine}/>\r\n                    <div className={classes.fullLine}/>\r\n                    <hr/>\r\n                    <div className={classes.halfWrapper}>\r\n                    <div className={classes.fullLine}/>\r\n                    {/* <LocationOn color=\"primary\"/>\r\n                    <span>Location</span> */}\r\n                    <hr/>\r\n                    <div className={classes.fullLine}/>\r\n                    {/* <LinkIcon color=\"primary\"/> https://website.com */}\r\n                    <hr/>\r\n                    <div className={classes.fullLine}/>\r\n                    {/* <CalendarToday color=\"primary\"/> Joined date */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nProfileSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProfileSkeleton)\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Phone from '@material-ui/icons/Phone';\r\nimport Email from '@material-ui/icons/Email';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser, uploadImage} from '../../redux/actions/userActions';\r\nimport {getScreams} from '../../redux/actions/dataActions';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding: 20\r\n      },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n    buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      }\r\n};\r\n\r\nexport class Profile extends Component {\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.user.credentials.imageUrl !== prevProps.user.credentials.imageUrl){\r\n            this.props.getScreams();\r\n        }\r\n    }\r\n\r\n    handleImageChange = (event) => {\r\n        const image = event.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData);\r\n    }\r\n\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById('imageInput');\r\n        fileInput.click();\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        const {classes, \r\n            user: {\r\n                credentials: {\r\n                    username,\r\n                    createdAt, \r\n                    imageUrl, \r\n                    bio, \r\n                    website, \r\n                    location,\r\n                    phone,\r\n                    email\r\n                },\r\n            loading,\r\n            authenticated\r\n        }} = this.props;\r\n        \r\n        let profileMarkup = !loading ? (authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                        <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange}/>\r\n                        <MyButton tip=\"Edit profile picture\" onClick={this.handleEditPicture} btnClassName=\"button\">\r\n                            <EditIcon color=\"primary\"/>\r\n                        </MyButton>\r\n                    </div> \r\n                    <hr/>\r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`users/${username}`} color=\"primary\" variant=\"h5\">\r\n                            {username}\r\n                        </MuiLink>\r\n                        <hr/>\r\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                        <hr/>\r\n                        {phone && (<Fragment>\r\n                            <Phone color=\"primary\"/>\r\n                            <span>{' '}{phone}</span>\r\n                            </Fragment>\r\n                            )}\r\n                        <hr/>\r\n                        {location && (\r\n                            <Fragment>\r\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                                <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        {website &&(\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\"/>\r\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {' '}{website}\r\n                                </a>\r\n                                <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        {email && (<Fragment>\r\n                            <Email color=\"primary\"/>\r\n                            <span>{' '}{email}</span>\r\n                            </Fragment>\r\n                            )}\r\n                        <hr/>\r\n                        <CalendarToday color=\"primary\"/>{' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n\r\n                    </div>\r\n                    <MyButton tip=\"Logout\" onClick={this.handleLogout}>\r\n                            <KeyboardReturn color=\"primary\"/>\r\n                        </MyButton>\r\n                    <EditDetails/>\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    No profile found, please login again!\r\n                </Typography>\r\n                <div className={classes.buttons}>\r\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                        Login\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">\r\n                        Signup\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        )) : (<ProfileSkeleton/>)\r\n        \r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {logoutUser, uploadImage, getScreams};\r\n\r\nProfile.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    getScreams: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from 'react';\r\nimport NoImg from '../images/no-img.jpg';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = {\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    cardContent: {\r\n        width: '100%',\r\n        fledDirection: 'column',\r\n        padding: 25\r\n    },\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    username: {\r\n        width: 60,\r\n        height: 18,\r\n        backgroundColor: \"#00bcd4\",\r\n        marginBottom: 7\r\n    },\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: 'rgba(0,0,0, 0.3)',\r\n        marginBottom: 10\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        width: '90%',\r\n        marginBottom: 10,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)'\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        width: '50%',\r\n        marginBottom: 10,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)'\r\n    }\r\n}\r\n\r\nconst ScreamSkeleton = (props) => {\r\n    const {classes} = props;\r\n\r\n    const content = Array.from({length: 5}).map((item, index) => (\r\n        <Card className={classes.card} key={index}>\r\n            <CardMedia className={classes.cover} image={NoImg}/>\r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.username}/>\r\n                <div className={classes.date}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.halfLine}/>\r\n            </CardContent>\r\n        </Card>\r\n    ))\r\n\r\n    return <Fragment>{content}</Fragment>\r\n}\r\n\r\nScreamSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ScreamSkeleton);\r\n","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport MyButton from '../../util/MyButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport BookScream from './BookScream';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\n\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n\r\n//select\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//MUI Pickers\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\n// import {bookScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n        minHeight: 200,\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        left: '40%',\r\n    },\r\n    suggestButton: {\r\n        marginTop: '5px',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '92%'\r\n    },\r\n    formControlSuggestion: {\r\n        marginTop: 20\r\n    },\r\n    submitButton: {\r\n        marginTop: 135\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass SuggestScreamDialog extends Component {\r\n\r\n    state = {\r\n        category: 'EventHall',\r\n        loading: false,\r\n        open: false,\r\n        date: new Date(),\r\n        price: '',\r\n        location: true,\r\n        music: false,\r\n        photo: false,\r\n        entertainment: false,\r\n        others: false,\r\n        suggestionType: 'suggested',\r\n        screams: []\r\n    };\r\n\r\n    handleCheckedChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.checked});\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    noneSelected = () => {\r\n        this.setState({\r\n            location: false,\r\n            music: false,\r\n            photo: false,\r\n            entertainment: false,\r\n            others: false,\r\n        })\r\n    }\r\n\r\n    handleCategoryChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.noneSelected();\r\n        if (event.target.value === 'EventHall')\r\n            this.setState({location: true});\r\n        else if (event.target.value === 'Music')\r\n            this.setState({music: true});\r\n        else if (event.target.value === 'Photo & Video')\r\n            this.setState({photo: true});\r\n        else if (event.target.value === 'Entertainment')\r\n            this.setState({entertainment: true});\r\n        else if (event.target.value === 'Others')\r\n            this.setState({others: true});  \r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({date: date.toISOString()});\r\n        this.setState({screams: []});\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            catgeory: 'EventHall',\r\n            date: new Date(),\r\n            price: '',\r\n            location: false,\r\n            music: false,\r\n            photo: false,\r\n            entertainment: false,\r\n            others: false,\r\n            suggestionType: 'suggested',\r\n            screams: []})\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit = () => {\r\n        this.setState({loading: true, screams: []});\r\n        let criterias = {\r\n            date: this.state.date,\r\n            price: this.state.price,\r\n            location: this.state.location,\r\n            music: this.state.music,\r\n            photo: this.state.photo,\r\n            entertainment: this.state.entertainment,\r\n            others: this.state.others,\r\n            suggestionType: this.state.suggestionType\r\n        }\r\n        axios.post(`/screams/suggest`, criterias)\r\n        .then(res => {\r\n            if (res.data[0] !== null)\r\n                this.setState({screams: res.data});\r\n            \r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes, user: {credentials}} = this.props;\r\n        const {loading} = this.state;\r\n        const buttonSubmit = (<Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} className={classes.submitButton} disabled={this.state.loading}>\r\n            Show me\r\n            </Button>);\r\n        const screamMarkup = this.state.screams.length > 0 ?(this.state.screams.map(scream => (\r\n            <Card key={scream.screamId} className={classes.card}>\r\n                <CardMedia image={scream.userImage} title=\"Profile Picture\" className={classes.image}/>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" component={Link} to={`/users/${scream.username}`} color=\"primary\">{scream.username}</Typography>\r\n                    <Typography variant=\"h6\">{scream.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(scream.createdAt).fromNow()}</Typography>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">{scream.body}</Typography>\r\n                    <Typography variant=\"h6\">Price: {scream.price} €</Typography>\r\n                    <LikeButton screamId={scream.screamId}/>\r\n                    <span>{scream.likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{scream.commentCount} Comments</span>\r\n                    {credentials.userType === 'Married To Be' ? (<BookScream screamId={scream.screamId} date={this.state.date.toString()} price={scream.price}/>) : null}\r\n                </CardContent>\r\n            </Card>\r\n            ))) : (<p>No available services</p>);\r\n\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n               <CircularProgress size={150} thickness={2} className={classes.progress}/>\r\n            </div>\r\n        ) : (\r\n            <Grid container spacing={2}>\r\n               <Grid item xs={4}>\r\n                    <MuiPickersUtilsProvider name=\"date\" utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker \r\n                        disablePast\r\n                        name=\"date\"\r\n                        margin=\"normal\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    {buttonSubmit}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField variant=\"outlined\" name=\"price\" type=\"text\" label=\"Add a price\" placeholder=\"Maximum Price\" onChange={this.handleChange}/>\r\n\r\n                        <FormControl name=\"suggestionType\" className={classes.formControlSuggestion} fullWidth>\r\n                                <InputLabel>Suggestion Type</InputLabel>\r\n                                <Select name=\"suggestionType\" value={this.state.suggestionType} onChange={this.handleChange}>\r\n                                    <MenuItem value={'low'}>Lowest Price</MenuItem>\r\n                                    <MenuItem value={'suggested'}>Suggested</MenuItem>\r\n                                    <MenuItem value={'high'}>Highest Price</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                    <FormControl name=\"category\" className={classes.formControl}>\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select name=\"category\" value={this.state.category} onChange={this.handleCategoryChange}>\r\n                            <MenuItem value={'EventHall'}>Location / EventHall</MenuItem>\r\n                            <MenuItem value={'Music'}>Music</MenuItem>\r\n                            <MenuItem value={'Photo & Video'}>Photo & Video</MenuItem>\r\n                            <MenuItem value={'Entertainment'}>Entertainment</MenuItem>\r\n                            <MenuItem value={'Others'}>Others</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                {screamMarkup}\r\n            </Grid>\r\n        );\r\n\r\n        \r\n        return (\r\n            <Fragment>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleOpen} className={classes.suggestButton} startIcon={<EmojiObjectsIcon />}>\r\n                    Quick Suggest\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nSuggestScreamDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SuggestScreamDialog));","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\nimport PropTypes from 'prop-types';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport SuggestScreamDialog from '../components/scream/SuggestScreamDialog';\r\n\r\n//MUI stuff\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//MUI Pickers\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n  \r\n\r\n\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getScreams} from '../redux/actions/dataActions';\r\n\r\nclass home extends Component {\r\n\r\n    state = {\r\n        date: new Date(),\r\n        price: '',\r\n        category: 'All'\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({date: date});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getScreams();\r\n    }\r\n    \r\n    render() {\r\n        const {screams, loading} = this.props.data;\r\n        let recentScreamsMarkup = !loading ? (screams.length !== 0 ? (\r\n        screams.map(scream => <Scream dateTag={this.state.date} priceTag={this.state.price} categoryTag={this.state.category} key={scream.screamId} scream={scream}/>)) : (<h2>No Posts Yet!</h2>)\r\n        ) : <ScreamSkeleton/>\r\n        return (\r\n            <div>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                    <MuiPickersUtilsProvider name=\"date\" utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker \r\n                        disablePast\r\n                        name=\"date\"\r\n                        margin=\"normal\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                    <TextField variant=\"outlined\" name=\"price\" type=\"text\" label=\"Add a price\" placeholder=\"Maximum Price\" onChange={this.handleChange}/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Category</InputLabel>\r\n                        <Select name=\"category\" native value={this.state.category} onChange={this.handleChange} label=\"Category\">\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"EventHall\">Location / EventHall</option>\r\n                        <option value=\"Music\">Music</option>\r\n                        <option value=\"Photo & Video\">Photo & Video</option>\r\n                        <option value=\"Entertainment\">Entertainment</option>\r\n                        <option value=\"Others\">Others</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <SuggestScreamDialog/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={4}>\r\n                    <Grid item sm={8} xs={12}>\r\n                        {recentScreamsMarkup}\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <Profile/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n  }\r\n}\r\n\r\nhome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapToStateProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapToStateProps, {getScreams})(home);","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport dayjs from 'dayjs';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n//Icons\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass Booking extends Component {\r\n\r\n    render() {\r\n        const {booking, classes} = this.props;\r\n        const{screams} = this.props.data;\r\n        let goodBooking = null;\r\n        if (screams.length > 0){\r\n            let index = screams.findIndex((scream) => scream.screamId === booking.screamId);\r\n            let scream = screams[index];\r\n            goodBooking = (<Card className={classes.card}>\r\n                <CardMedia image={scream.userImage} title=\"Profile Picture\" className={classes.image}/>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" color=\"primary\">{dayjs(booking.date).format('DD MMMM YYYY')}</Typography>\r\n                    <Typography variant=\"h6\">{scream.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(scream.createdAt).fromNow()}</Typography>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">{scream.body}</Typography>\r\n                    <Typography variant=\"h6\">Price: {scream.price} €</Typography>\r\n                    <LikeButton screamId={scream.screamId}/>\r\n                    <span>{scream.likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{scream.commentCount} Comments</span>\r\n                </CardContent>\r\n            </Card>);\r\n        }\r\n        return (goodBooking);\r\n    }\r\n}\r\n\r\nBooking.propTypes = {\r\n    booking: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    data: state.data\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Booking));\r\n","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Profile from '../components/profile/Profile';\r\nimport PropTypes from 'prop-types';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport Booking from '../components/scream/Booking';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass bookings extends Component {\r\n\r\n    render() {\r\n        const {bookings, loading} = this.props.user;\r\n        let recentBookingsMarkup = !loading ? (bookings && bookings.length !== 0 ? (\r\n        bookings.map(booking => <Booking key={booking.createdAt} booking={booking}/>)) : (<h2>No Bookings Yet!</h2>)\r\n        ) : <ScreamSkeleton/>\r\n        return (\r\n            <div>      \r\n                <Grid container spacing={4}>\r\n                    <Grid item sm={8} xs={12}>\r\n                        {recentBookingsMarkup}\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <Profile/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n  }\r\n}\r\n\r\nbookings.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapToStateProps = state => ({\r\n    user: state.user,\r\n})\r\n\r\nexport default connect(mapToStateProps)(bookings);","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/logo-mare.png';\r\nimport {Link} from 'react-router-dom' ;\r\n\r\n//Redux imports\r\nimport {connect} from 'react-redux';\r\nimport {loginUser} from '../redux/actions/userActions';\r\n\r\n//Mui imports\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      image: {\r\n          margin: '20px auto 20px auto',\r\n          maxWidth: '200px',\r\n          maxHeight: '200px'\r\n      },\r\n      textField: {\r\n          margin: '10px auto 10px auto',\r\n      },\r\n      button: {\r\n          marginTop: 20,\r\n          position: 'relative'\r\n      },\r\n      customError: {\r\n          color: 'red',\r\n          fontSize: \"0.8rem\",\r\n          marginTop: 10,\r\n      },\r\n      progress: {\r\n          position: \"absolute\",\r\n      }\r\n};\r\n\r\nclass login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false,\r\n            errors: {} \r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors});\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n       event.preventDefault();\r\n       const userData = {\r\n           email: this.state.email,\r\n           password: this.state.password\r\n       }\r\n       this.props.loginUser(userData, this.props.history);\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, UI: {loading}} = this.props;\r\n        const {errors} = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"logo\" className={classes.image}/>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id='email' name='email' type='email' label='Email' className={classes.textField}\r\n                           helperText={errors.email} error={errors.email ? true : false}  value={this.state.email} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id='password' name='password' type='password' label='Password' className={classes.textField}\r\n                            helperText={errors.password} error={errors.password ? true : false}  value={this.state.password} onChange={this.handleChange} fullWidth/>\r\n                        {errors.general && (\r\n                            <Typography variant='body2' className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\" variant='contained' color=\"primary\" className={classes.button}\r\n                        disabled={loading}>\r\n                        Login\r\n                        {loading && (\r\n                            <CircularProgress size={30} className={classes.progress}/>\r\n                        )} \r\n                        </Button>\r\n                        <br/><br/>\r\n                        <small>Need an account ? Sign up <Link to=\"/signup\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n  }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login))","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/logo-mare.png';\r\nimport {Link} from 'react-router-dom' ;\r\n\r\n//Mui imports\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {signupUser} from '../redux/actions/userActions';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      image: {\r\n          margin: '20px auto 20px auto',\r\n          maxWidth: '200px',\r\n          maxHeight: '200px'\r\n      },\r\n      textField: {\r\n          margin: '10px auto 10px auto',\r\n      },\r\n      button: {\r\n          marginTop: 20,\r\n          position: 'relative'\r\n      },\r\n      customError: {\r\n          color: 'red',\r\n          fontSize: \"0.8rem\",\r\n          marginTop: 10,\r\n      },\r\n      progress: {\r\n          position: \"absolute\",\r\n      }\r\n};\r\n\r\nclass signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            username: '',\r\n            userType: 'Married To Be',\r\n            errors: {} \r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n       event.preventDefault();\r\n       this.setState({\r\n           loading: true\r\n       })\r\n       const newUserData = {\r\n           email: this.state.email,\r\n           password: this.state.password,\r\n           confirmPassword: this.state.confirmPassword,\r\n           username: this.state.username,\r\n           userType: this.state.userType,\r\n       }\r\n       this.props.signupUser(newUserData, this.props.history);\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, UI : {loading}} = this.props;\r\n        const {errors} = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"logo\" className={classes.image}/>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id='email' name='email' type='email' label='Email' className={classes.textField}\r\n                           helperText={errors.email} error={errors.email ? true : false}  value={this.state.email} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id='password' name='password' type='password' label='Password' className={classes.textField}\r\n                            helperText={errors.password} error={errors.password ? true : false}  value={this.state.password} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id='confirmPassword' name='confirmPassword' type='password' label='Confirm Password' className={classes.textField}\r\n                            helperText={errors.confirmPassword} error={errors.confirmPassword ? true : false}  value={this.state.confirmPassword} onChange={this.handleChange} fullWidth/>\r\n                        <TextField id='username' name='username' type='text' label='Username' className={classes.textField}\r\n                            helperText={errors.username} error={errors.username ? true : false}  value={this.state.username} onChange={this.handleChange} fullWidth/>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">User Type</InputLabel>\r\n                            <Select name=\"userType\" labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={this.state.userType} onChange={this.handleChange}>\r\n                                <MenuItem value=\"Married To Be\">Married To Be</MenuItem>\r\n                                <MenuItem value=\"Service Provider\">Service Provider</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n                        {errors.general && (\r\n                            <Typography variant='body2' className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\" variant='contained' color=\"primary\" className={classes.button}\r\n                        disabled={loading}>\r\n                        Signup\r\n                        {loading && (\r\n                            <CircularProgress size={30} className={classes.progress}/>\r\n                        )} \r\n                        </Button>\r\n                        <br/><br/>\r\n                        <small>Already have an account ? Login <Link to=\"/login\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n  }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI:  PropTypes.object.isRequired,\r\n    signupUser:  PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {signupUser})(withStyles(styles)(signup));","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n//Select\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {postScream, clearErrors} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    textField: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    formControl: {\r\n        margin: '10px 20px 10px auto',\r\n        minWidth: 120,\r\n\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '3%'\r\n    },\r\n    divText: {\r\n        marginTop: '10px',\r\n    },\r\n    dayPicker: {\r\n        display: 'flow-root'\r\n    }\r\n}\r\n\r\nclass PostScream extends Component{\r\n    state = {\r\n        open: false,\r\n        name: '',\r\n        body: '',\r\n        category: 'Others',\r\n        price: '',\r\n        busyDates: [],\r\n        photos: [],\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({ name: '',\r\n            body: '',\r\n            category: 'Others',\r\n            price: '',\r\n            busyDates: [],\r\n            photos: [], \r\n            open:false, \r\n            errors: {}});\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open:true});\r\n    }\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({open:false, errors: {}});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postScream({\r\n            name: this.state.name,\r\n            body: this.state.body,\r\n            category: this.state.category,\r\n            price: this.state.price,\r\n            busyDates: this.state.busyDates,\r\n        }, this.state.photos);\r\n        \r\n    }\r\n\r\n    handleDayClick = (day, { selected }) => {\r\n        const { busyDates } = this.state;\r\n        if (selected) {\r\n          const selectedIndex = busyDates.findIndex(selectedDay =>\r\n            DateUtils.isSameDay(selectedDay, day)\r\n          );\r\n          busyDates.splice(selectedIndex, 1);\r\n        } else {\r\n          busyDates.push(day);\r\n        }\r\n        this.setState({ busyDates });\r\n    }\r\n    \r\n    onDrop = (picture) => {\r\n        const {photos} = this.state;\r\n        photos.push(picture);\r\n        this.setState({photos});\r\n    }\r\n\r\n    render(){\r\n        const {errors} = this.state;\r\n        const {classes, UI: {loading}} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"New Post\">\r\n                    <AddIcon/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogTitle>\r\n                        New post\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField name=\"name\" type=\"text\" label=\"Add a name\" placeholder=\"Post Name\" error={errors.name ? true : false}\r\n                            helperText={errors.name} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"body\" type=\"text\" label=\"Add a post\" multiline rows=\"3\" placeholder=\"New Post\" error={errors.body ? true : false}\r\n                            helperText={errors.body} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                            <FormControl name=\"category\" className={classes.formControl}>\r\n                                <InputLabel>Category</InputLabel>\r\n                                <Select name=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                                    <MenuItem value={'EventHall'}>Location / EventHall</MenuItem>\r\n                                    <MenuItem value={'Music'}>Music</MenuItem>\r\n                                    <MenuItem value={'Photo & Video'}>Photo & Video</MenuItem>\r\n                                    <MenuItem value={'Entertainment'}>Entertainment</MenuItem>\r\n                                    <MenuItem value={'Others'}>Others</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField name=\"price\" type=\"text\" label=\"Price\" placeholder=\"€\" error={errors.price ? true : false}\r\n                            helperText={errors.price} className={classes.textField} onChange={this.handleChange}/>\r\n                            <br/>\r\n                            <div className={classes.divText}>\r\n                            <span>Choose the dates that you are not available:</span>\r\n                            </div>\r\n                            <br/>\r\n                            <DayPicker className={classes.dayPicker} disabledDays={{ before: new Date() }} selectedDays={this.state.busyDates} onDayClick={this.handleDayClick}/>\r\n                            <br/>\r\n                            <ImageUploader withPreview={true} withIcon={true} buttonText='Choose images' onChange={this.onDrop} label=\"Upload maximum 5 images\" imgExtension={['.jpg', '.png']} maxFileSize={5242880}/>\r\n                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                             Submit\r\n                             {loading && (\r\n                                 <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                             )}\r\n                         </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    UI:PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postScream, clearErrors})(withStyles(styles)(PostScream));","import React, { Component, Fragment} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Mui stuff\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\n//Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\n\r\n\r\n//REdux\r\nimport {connect} from 'react-redux';\r\nimport {markNotificationsRead} from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    }\r\n\r\n    handleOpen = (event) => {\r\n        this.setState({anchorEl : event.target});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({anchorEl: null})\r\n    }\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = this.props.notifications\r\n        .filter(notif => !notif.read)\r\n        .map(notif => notif.notificationId);\r\n\r\n        this.props.markNotificationsRead(unreadNotificationsIds);\r\n\r\n    }\r\n\r\n    render(){\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n        \r\n        let notificationsIcon;\r\n        if(notifications && notifications.length > 0){\r\n            notifications.filter(notif => notif.read === false).length > 0 ? (\r\n                notificationsIcon = (\r\n                    <Badge badgeContent={notifications.filter(notif => notif.read === false).length} color=\"secondary\">\r\n                        <NotificationsIcon/>\r\n                    </Badge>\r\n                )\r\n            ) : (\r\n                notificationsIcon = <NotificationsIcon/>\r\n            )\r\n        }\r\n        else {\r\n            notificationsIcon = <NotificationsIcon/>\r\n        }\r\n\r\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\r\n            notifications.map(notif => {\r\n                const verb = notif.type === 'like' ? 'liked' : notif.type === 'comment' ? 'commened on' : 'booked';\r\n                const time = dayjs(notif.createdAt).fromNow();\r\n                const  iconColor = notif.read ? 'primary' : 'secondary';\r\n                const icon = notif.type === 'like' ? (\r\n                    <FavoriteIcon color={iconColor} style={{marginRight: 10}} />\r\n                ) : (notif.type === 'comment') ? (\r\n                    <ChatIcon color={iconColor} style={{marginRight: 10}}/>\r\n                ) : (<PlaylistAddCheckIcon color={iconColor} style={{marginRight: 10}}/>)\r\n\r\n                return (\r\n                    <MenuItem key={notif.createdAt} onClick={this.handleClose}>\r\n                        {icon}\r\n                        <Typography component={Link} color=\"initial\" variant=\"body1\" to={`/users/${notif.recipient}/scream/${notif.screamId}`}>\r\n                            {notif.sender} {verb} your post {time}\r\n                        </Typography>\r\n                    </MenuItem>\r\n                )\r\n            })\r\n        ) : (\r\n            <MenuItem onClick={this.handleClose}>\r\n                You have no notifications yet!\r\n            </MenuItem>\r\n        )\r\n\r\n        return (\r\n            <Fragment>\r\n                <Tooltip placement=\"top\" title=\"Notifications\">\r\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined} aria-haspopup=\"true\" onClick={this.handleOpen}>\r\n                        {notificationsIcon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose} onEntered={this.onMenuOpened}>\r\n                    {notificationsMarkup}\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>  ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications);","import React, { Component, Fragment } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport PostScream from '../scream/PostScream';\r\nimport Notifications from './Notifications';\r\n// import LogoImage from '../../images/logo-mare.png';\r\n\r\n\r\n//Material Design\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\n\r\n//Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n\r\nexport class Navbar extends Component {\r\n  render() {\r\n\r\n    const {authenticated, userType} = this.props; \r\n\r\n    return (\r\n      <AppBar>\r\n        <Toolbar className=\"nav-container\">\r\n          \r\n          {authenticated ? (\r\n              <Fragment>\r\n                {userType && userType === 'Service Provider' ? (<PostScream/>) : null}\r\n                <Link to='/bookings'>\r\n                  <MyButton tip=\"Bookings\">\r\n                    <PlaylistAddCheckIcon/>\r\n                  </MyButton>\r\n                </Link>\r\n                <Link to=\"/\">\r\n                <MyButton tip=\"Home\">\r\n                    <HomeIcon/>\r\n                </MyButton>\r\n                </Link>\r\n                {userType && userType === 'Married To Be' ? (\r\n                  <Link to=\"/suggestPackage\">\r\n                  <MyButton tip=\"Find a Package\">\r\n                      <EmojiObjectsIcon/>\r\n                  </MyButton>\r\n                  </Link>\r\n                ) : null}\r\n                {userType && userType === 'Service Provider' ? (<Notifications/>) : null}\r\n              </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                  Login\r\n                </Button>\r\n                <Button color=\"inherit\" component={Link} to=\"/\">\r\n                  Home\r\n                </Button>\r\n                <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                  Signup\r\n                </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated : PropTypes.bool.isRequired,\r\n    userType : PropTypes.string\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated,\r\n  userType: state.user.credentials.userType\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Phone from '@material-ui/icons/Phone';\r\nimport Email from '@material-ui/icons/Email';\r\n\r\n//MUI imports\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding: 20\r\n      },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative'\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        }\r\n      }\r\n};\r\n\r\nconst StaticProfile = (props) => {\r\n    const {classes, profile: {\r\n        username,\r\n        createdAt,\r\n        imageUrl,\r\n        bio,\r\n        website,\r\n        location,\r\n        phone,\r\n        email\r\n    }} = props\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                    </div> \r\n                    <hr/>\r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`users/${username}`} color=\"primary\" variant=\"h5\">\r\n                            {username}\r\n                        </MuiLink>\r\n                        <hr/>\r\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                        <hr/>\r\n                        {phone && (<Fragment>\r\n                            <Phone color=\"primary\"/>\r\n                            <span>{' '}{phone}</span>\r\n                            </Fragment>\r\n                            )}\r\n                        <hr/>\r\n                        {location && (\r\n                            <Fragment>\r\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                                <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        {website &&(\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\"/>\r\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {' '}{website}\r\n                                </a>\r\n                                <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        {email && (<Fragment>\r\n                            <Email color=\"primary\"/>\r\n                            <span>{' '}{email}</span>\r\n                            </Fragment>\r\n                            )}\r\n                        <hr/>\r\n                        <CalendarToday color=\"primary\"/>{' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Scream from '../components/scream/Scream';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {connect} from 'react-redux';\r\nimport {getUserData} from '../redux/actions/dataActions';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\n\r\nclass user extends Component {\r\n\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        const username = this.props.match.params.username;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if(screamId) \r\n            this.setState({screamIdParam: screamId});\r\n\r\n        this.props.getUserData(username);\r\n        axios.get(`/user/${username}`)\r\n        .then(res => {\r\n            this.setState({\r\n                profile: res.data.user\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const {screams, loading} = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <ScreamSkeleton/>\r\n        ) : screams === null ? (\r\n            <p>No posts from this user</p>\r\n        ) : !screamIdParam ? (\r\n            screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : (\r\n            screams.map(scream => {\r\n                if (scream.screamId !== screamIdParam)\r\n                    return <Scream key={scream.screamId} scream={scream}/>\r\n                else\r\n                    return <Scream key={scream.screamId} scream={scream} openDialog/>\r\n            })\r\n        )\r\n        return (\r\n            <Grid container spacing={4}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton/>\r\n                    ) : (<StaticProfile profile={this.state.profile}/>)}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData})(user);\r\n","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Profile from '../components/profile/Profile';\r\nimport BookScream from '../components/scream/BookScream';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\n\r\n//Mui Stuff\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n//select\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n//table\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//MUI Pickers\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\nimport {suggestPackageScreams, clearErrors} from '../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    budget: {\r\n        textAlign: 'center'\r\n    },\r\n    progress: {\r\n        position: \"absolute\",\r\n    },\r\n    suggestButton: {\r\n        marginTop: '5px',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '92%'\r\n    },\r\n    formControl: {\r\n        marginTop: 60\r\n    },\r\n    formControlSuggestion: {\r\n        marginTop: 10\r\n    },\r\n    submitButton: {\r\n        marginTop: 135\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableContainer: {\r\n        marginTop: 25,\r\n        padding: 15,\r\n    }\r\n}\r\n\r\nclass suggestPackage extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        open: false,\r\n        date: new Date().toISOString(),\r\n        price: '',\r\n        location: true,\r\n        music: false,\r\n        photo: false,\r\n        entertainment: false,\r\n        others: false,\r\n        suggestionType: 'suggested',\r\n        error: {},\r\n        errors: {}\r\n    };\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors, open: true});\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false, errors: {}});\r\n        this.props.clearErrors();\r\n    } \r\n\r\n    handleCheckedChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.checked});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({errors: {}});\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({date: date.toISOString()});\r\n        this.setState({errors: {}});\r\n        this.props.clearErrors();\r\n    }\r\n    \r\n\r\n    handleSubmit = () => {\r\n        // this.setState({loading: true, screams: []});\r\n        let criterias = {\r\n            date: this.state.date,\r\n            price: this.state.price,\r\n            location: this.state.location,\r\n            music: this.state.music,\r\n            photo: this.state.photo,\r\n            entertainment: this.state.entertainment,\r\n            others: this.state.others,\r\n            suggestionType: this.state.suggestionType\r\n        }\r\n        this.props.suggestPackageScreams(criterias);\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes, user: {authenticated, credentials}, UI: {loading}, data: {package: pkg}} = this.props;   \r\n        const {errors} = this.state;\r\n        const firstPackage = pkg.length > 0 ? pkg[0] : null;\r\n        const secondPackage = pkg.length > 0 ? pkg[1] : null;\r\n        const error = [this.state.location, this.state.music, this.state.photo, this.state.entertainment, this.state.others].filter((v) => v).length < 1;\r\n        const buttonSubmit = error ? (<Button variant=\"contained\" disabled className={classes.submitButton}>\r\n        Show me\r\n      </Button>) : (<Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} className={classes.submitButton} disabled={loading}>\r\n            Show me\r\n            {loading && (\r\n                <CircularProgress size={30} className={classes.progress}/>\r\n            )} \r\n        </Button>);\r\n\r\n        const table = Object.keys(errors).length === 0  && firstPackage ? (\r\n            <TableContainer component={Paper} className={classes.tableContainer}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead className={classes.head}>\r\n                        <TableRow>\r\n                            <TableCell><Button color=\"primary\">Top</Button></TableCell>\r\n                            <TableCell align=\"right\"><Button color=\"primary\">Name</Button></TableCell>\r\n                            <TableCell align=\"right\"><Button color=\"primary\">Description</Button></TableCell>\r\n                            <TableCell align=\"right\"><Button color=\"primary\">Category</Button></TableCell>\r\n                            <TableCell align=\"right\"><Button color=\"primary\">Price</Button></TableCell>\r\n                            <TableCell align=\"right\"><Button color=\"primary\">Book it</Button></TableCell>\r\n                     </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {firstPackage.map((scream) => (\r\n                        <TableRow key={scream.createdAt} className={classes.choice} selected>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {1}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{scream.name}</TableCell>\r\n                        <TableCell align=\"right\" className={classes.bodyText}>{scream.body}</TableCell>\r\n                        <TableCell align=\"right\">{scream.category}</TableCell>\r\n                        <TableCell align=\"right\">{scream.price}</TableCell>\r\n                        {authenticated && credentials.userType === 'Married To Be' ? (<TableCell align=\"right\">\r\n                            <BookScream screamId={scream.screamId} date={this.state.date} price={scream.price}/>\r\n                            </TableCell>) : null}\r\n                        </TableRow>\r\n                    ))}\r\n\r\n                    {secondPackage && secondPackage.map((scream) => (\r\n                        <TableRow key={scream.createdAt}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {2}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{scream.name}</TableCell>\r\n                        <TableCell align=\"right\" className={classes.bodyText}>{scream.body}</TableCell>\r\n                        <TableCell align=\"right\">{scream.category}</TableCell>\r\n                        <TableCell align=\"right\">{scream.price}</TableCell>\r\n                        {authenticated && credentials.userType === 'Married To Be' ? (<TableCell align=\"right\">\r\n                            <BookScream screamId={scream.screamId} date={this.state.date} price={scream.price}/>\r\n                            </TableCell>) : null}\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        ) : (\r\n\r\n            <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Try a new searching\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {errors.error}\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                    Ok\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            // <Dialog open={this.state.open} onClose={this.handleClose}>\r\n            //     <DialogTitle>{errors.error}</DialogTitle>\r\n            //     <DialogContent>Smth</DialogContent>\r\n            //     <DialogActions>\r\n            //     <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n            //         Ok\r\n            //     </Button>\r\n            //     </DialogActions>\r\n            // </Dialog>\r\n        );\r\n\r\n        return (\r\n            <Fragment>\r\n            <Grid container spacing={2}>\r\n               <Grid item xs={3} className={classes.smallGrid}>\r\n                    <MuiPickersUtilsProvider name=\"date\" utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker \r\n                        disablePast\r\n                        name=\"date\"\r\n                        margin=\"normal\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n                    <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={this.state.location} onChange={this.handleCheckedChange} name=\"location\" color=\"primary\" />}\r\n                        label=\"Location / EventHall\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={this.state.music} onChange={this.handleCheckedChange} name=\"music\" color=\"primary\"/>}\r\n                        label=\"Music\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={this.state.photo} onChange={this.handleCheckedChange} name=\"photo\" color=\"primary\"/>}\r\n                        label=\"Photo & Video\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={this.state.entertainment} onChange={this.handleCheckedChange} name=\"entertainment\" color=\"primary\" />}\r\n                        label=\"Entertainment\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={this.state.others} onChange={this.handleCheckedChange} name=\"others\" color=\"primary\" />}\r\n                        label=\"Others\"\r\n                    />\r\n                    </FormGroup>\r\n                    {error && (<FormHelperText>Choose at least one!</FormHelperText>)}\r\n                </FormControl>\r\n                {buttonSubmit}\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.budget}>\r\n                    <TextField variant=\"outlined\" name=\"price\" type=\"text\" label=\"Maximum Budget\" placeholder=\"Maximum Budget\" className={classes.budget} onChange={this.handleChange}/>\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.smallGrid}>\r\n                    <FormControl name=\"suggestionType\" className={classes.formControlSuggestion} fullWidth>\r\n                                <InputLabel>Suggestion Type</InputLabel>\r\n                                <Select name=\"suggestionType\" value={this.state.suggestionType} onChange={this.handleChange}>\r\n                                    <MenuItem value={'low'}>Lowest Price</MenuItem>\r\n                                    <MenuItem value={'suggested'}>Suggested</MenuItem>\r\n                                    <MenuItem value={'high'}>Highest Price</MenuItem>\r\n                                </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                        <Profile/>\r\n                </Grid>\r\n            </Grid>\r\n            {table}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nsuggestPackage.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    suggestPackageScreams: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {suggestPackageScreams, clearErrors})(withStyles(styles)(suggestPackage));","import React from 'react';\nimport { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport jwtDecode from 'jwt-decode';\nimport AuthRoute from './util/AuthRoute';\n\n//Redux\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport {SET_AUTHENTICATED} from \"./redux/types\";\nimport {logoutUser, getUserData} from './redux/actions/userActions'; \n\n//Pages\nimport home from './pages/home';\nimport bookings from './pages/bookings';\nimport login from './pages/login'\nimport signup from './pages/signup'\nimport Navbar from './components/layout/Navbar';\nimport user from './pages/user';\nimport suggestPackage from './pages/suggestPackage';\nimport axios from 'axios';\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      light: '#33c9dc',\n      main: \"#00bcd4\",\n      dark: '#008394',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff6333',\n      main: \"#ff3d00\",\n      dark: '#b22a00',\n      contrastText: '#fff'\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n\naxios.defaults.baseURL = \"https://europe-west1-weddingbooking-e18d9.cloudfunctions.net/api\";\n\nconst token = localStorage.FBIdToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n  else{\n    store.dispatch({type: SET_AUTHENTICATED});\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render(){\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n        <Router>\n        <Navbar/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path='/' component={home}/>\n              <Route exact path='/bookings' component={bookings}/>\n              <AuthRoute exact path='/login' component={login}/>\n              <AuthRoute exact path='/signup' component={signup}/>\n              <Route exact path='/users/:username' component={user}/>\n              <Route exact path='/users/:username/scream/:screamId' component={user}/> \n              <Route exact path='/suggestPackage' component={suggestPackage}/>\n            </Switch>\n          </div>\n        </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}