{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\Scream.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './ScreamDialog';\nimport LikeButton from './LikeButton';\nimport { connect } from 'react-redux'; //Icons\n\nimport ChatIcon from '@material-ui/icons/Chat'; //MUI\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  },\n  bodyText: {\n    textAlign: 'justify'\n  }\n};\n\nclass Scream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkDateIsNotBusy = (busyDates, date) => {\n      let onlyDate = dayjs(date).format('YYYY-MM-DD');\n      let isBusy = false;\n      busyDates.forEach(dateB => {\n        let onlyDateB = dateB.split('T');\n        console.log(onlyDate);\n        console.log(onlyDateB[0]);\n\n        if (onlyDate === onlyDateB[0]) {\n          isBusy = true;\n        }\n      });\n      return isBusy;\n    };\n  }\n\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      dateTag,\n      priceTag,\n      categoryTag,\n      scream: {\n        name,\n        price,\n        category,\n        busyDates,\n        body,\n        createdAt,\n        userImage,\n        username,\n        screamId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials\n      }\n    } = this.props;\n    let priceTagNo = parseInt(priceTag, 10);\n    let priceNo = parseInt(price, 10);\n    console.log(dateTag);\n    console.log(priceTagNo);\n    console.log(priceNo);\n    console.log(categoryTag);\n    const deleteButton = authenticated && username === credentials.username ? React.createElement(DeleteScream, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : null;\n    const goodScream = (categoryTag === 'All' || categoryTag === category) && (dateTag.getTime() <= new Date().getTime() || !this.checkDateIsNotBusy(busyDates, dateTag)) && (priceTag === '' || priceTagNo > priceNo) || !dateTag && !priceTag && !categoryTag ? React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      image: userImage,\n      title: \"Profile Picture\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${username}`,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, username), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, name), deleteButton, React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, dayjs(createdAt).fromNow()), React.createElement(Typography, {\n      className: classes.bodyText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, body), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Price: \", price, \" \\u20AC\"), React.createElement(LikeButton, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, likeCount, \" Likes\"), React.createElement(MyButton, {\n      tip: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, commentCount, \" Comments\"), React.createElement(ScreamDialog, {\n      screamId: screamId,\n      username: username,\n      openDialog: this.props.openDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))) : null;\n    return goodScream;\n  }\n\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  dateTag: PropTypes.object,\n  priceTag: PropTypes.string,\n  categoryTag: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/Scream.js"],"names":["React","Component","withStyles","Typography","Link","dayjs","relativeTime","PropTypes","MyButton","DeleteScream","ScreamDialog","LikeButton","connect","ChatIcon","Card","CardContent","CardMedia","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","bodyText","textAlign","Scream","checkDateIsNotBusy","busyDates","date","onlyDate","format","isBusy","forEach","dateB","onlyDateB","split","console","log","render","extend","classes","dateTag","priceTag","categoryTag","scream","name","price","category","body","createdAt","userImage","username","screamId","likeCount","commentCount","user","authenticated","credentials","props","priceTagNo","parseInt","priceNo","deleteButton","goodScream","getTime","Date","fromNow","openDialog","propTypes","object","isRequired","string","bool","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAwB,8BAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAGA;;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFC,IAAAA,YAAY,EAAE;AAHZ,GADK;AAMXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GANI;AASXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,SAAS,EAAE;AAFN,GATE;AAaXC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAE;AADN;AAbE,CAAf;;AAkBA,MAAMC,MAAN,SAAqB5B,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3B6B,kBAF2B,GAEN,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACtC,UAAIC,QAAQ,GAAG5B,KAAK,CAAC2B,IAAD,CAAL,CAAYE,MAAZ,CAAmB,YAAnB,CAAf;AACA,UAAIC,MAAM,GAAG,KAAb;AACAJ,MAAAA,SAAS,CAACK,OAAV,CAAmBC,KAAD,IAAW;AACzB,YAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAAC,CAAD,CAArB;;AACA,YAAIL,QAAQ,KAAKK,SAAS,CAAC,CAAD,CAA1B,EAA8B;AAC1BH,UAAAA,MAAM,GAAG,IAAT;AACH;AACJ,OAPD;AAQA,aAAOA,MAAP;AACH,KAd0B;AAAA;;AAgB3BO,EAAAA,MAAM,GAAG;AACLrC,IAAAA,KAAK,CAACsC,MAAN,CAAarC,YAAb;AACA,UAAM;AAACsC,MAAAA,OAAD;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA,WAA7B;AAA0CC,MAAAA,MAAM,EAAG;AAACC,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcC,QAAAA,QAAd;AAAwBpB,QAAAA,SAAxB;AAAmCqB,QAAAA,IAAnC;AAAyCC,QAAAA,SAAzC;AAAoDC,QAAAA,SAApD;AAA+DC,QAAAA,QAA/D;AAAyEC,QAAAA,QAAzE;AAAmFC,QAAAA,SAAnF;AAA8FC,QAAAA;AAA9F,OAAnD;AACNC,MAAAA,IAAI,EAAE;AAACC,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB;AADA,QACgC,KAAKC,KAD3C;AAEA,QAAIC,UAAU,GAAIC,QAAQ,CAAClB,QAAD,EAAW,EAAX,CAA1B;AACA,QAAImB,OAAO,GAAGD,QAAQ,CAACd,KAAD,EAAQ,EAAR,CAAtB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAZ;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AAEA,UAAMmB,YAAY,GAAGN,aAAa,IAAIL,QAAQ,KAAKM,WAAW,CAACN,QAA1C,GACjB,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,GAEjB,IAFJ;AAIA,UAAMW,UAAU,GAAI,CAACpB,WAAW,KAAK,KAAhB,IAAyBA,WAAW,KAAKI,QAA1C,MAAwDN,OAAO,CAACuB,OAAR,MAAsB,IAAIC,IAAJ,EAAD,CAAaD,OAAb,EAArB,IAAgD,CAAC,KAAKtC,kBAAL,CAAwBC,SAAxB,EAAmCc,OAAnC,CAAzG,MAA2JC,QAAQ,KAAK,EAAb,IAAmBiB,UAAU,GAAGE,OAA3L,KAAwM,CAACpB,OAAD,IAAY,CAACC,QAAb,IAAyB,CAACC,WAAnO,GAClB,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEH,OAAO,CAAC1B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEoC,SAAlB;AAA6B,MAAA,KAAK,EAAC,iBAAnC;AAAqD,MAAA,SAAS,EAAEV,OAAO,CAACtB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEsB,OAAO,CAACpB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEpB,IAApC;AAA0C,MAAA,EAAE,EAAG,UAASmD,QAAS,EAAjE;AAAoE,MAAA,KAAK,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqFA,QAArF,CADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BN,IAA1B,CAFJ,EAGKiB,YAHL,EAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmD7D,KAAK,CAACgD,SAAD,CAAL,CAAiBiB,OAAjB,EAAnD,CAJJ,EAKI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE1B,OAAO,CAACjB,QAA/B;AAAyC,MAAA,OAAO,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DyB,IAA1D,CALJ,EAMI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiCF,KAAjC,YANJ,EAOI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,SAAP,WARJ,EASI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,YAAP,cAZJ,EAaI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEF,QAAxB;AAAkC,MAAA,QAAQ,EAAED,QAA5C;AAAsD,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAWS,UAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CAFH,CADkB,GAkBR,IAlBX;AAoBA,WACIJ,UADJ;AAGH;;AAtD0B;;AAyD/BtC,MAAM,CAAC2C,SAAP,GAAmB;AACfb,EAAAA,IAAI,EAAEpD,SAAS,CAACkE,MAAV,CAAiBC,UADR;AAEf1B,EAAAA,MAAM,EAAEzC,SAAS,CAACkE,MAAV,CAAiBC,UAFV;AAGf7B,EAAAA,OAAO,EAAEtC,SAAS,CAACkE,MAHJ;AAIf3B,EAAAA,QAAQ,EAAEvC,SAAS,CAACoE,MAJL;AAKf5B,EAAAA,WAAW,EAAExC,SAAS,CAACoE,MALR;AAMf/B,EAAAA,OAAO,EAAErC,SAAS,CAACkE,MAAV,CAAiBC,UANX;AAOfH,EAAAA,UAAU,EAAEhE,SAAS,CAACqE;AAPP,CAAnB;;AAUA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC7BnB,EAAAA,IAAI,EAAEmB,KAAK,CAACnB;AADiB,CAAJ,CAA7B;;AAKA,eAAe/C,OAAO,CAACiE,eAAD,CAAP,CAAyB3E,UAAU,CAACe,MAAD,CAAV,CAAmBY,MAAnB,CAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n//Icons\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n\r\n    checkDateIsNotBusy = (busyDates, date) => {\r\n        let onlyDate = dayjs(date).format('YYYY-MM-DD');\r\n        let isBusy = false;\r\n        busyDates.forEach((dateB) => {\r\n            let onlyDateB = dateB.split('T');\r\n            console.log(onlyDate);\r\n            console.log(onlyDateB[0]);\r\n            if (onlyDate === onlyDateB[0]){\r\n                isBusy = true;\r\n            }\r\n        })\r\n        return isBusy;\r\n    }\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const {classes, dateTag, priceTag, categoryTag, scream : {name, price, category, busyDates, body, createdAt, userImage, username, screamId, likeCount, commentCount},\r\n        user: {authenticated, credentials}} = this.props;\r\n        let priceTagNo  = parseInt(priceTag, 10);\r\n        let priceNo = parseInt(price, 10);\r\n        console.log(dateTag);\r\n        console.log(priceTagNo);\r\n        console.log(priceNo);\r\n        console.log(categoryTag);\r\n        \r\n        const deleteButton = authenticated && username === credentials.username ? (\r\n            <DeleteScream screamId={screamId}/>\r\n        ) : null\r\n\r\n        const goodScream = ((categoryTag === 'All' || categoryTag === category) && (dateTag.getTime() <= (new Date()).getTime() || (!this.checkDateIsNotBusy(busyDates, dateTag))) && (priceTag === '' || priceTagNo > priceNo) || (!dateTag && !priceTag && !categoryTag)) ?\r\n        (<Card className={classes.card}>\r\n            <CardMedia image={userImage} title=\"Profile Picture\" className={classes.image}/>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"h5\" component={Link} to={`/users/${username}`} color=\"primary\">{username}</Typography>\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                {deleteButton}\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                <Typography className={classes.bodyText} variant=\"body1\">{body}</Typography>\r\n                <Typography variant=\"h6\">Price: {price} €</Typography>\r\n                <LikeButton screamId={screamId}/>\r\n                <span>{likeCount} Likes</span>\r\n                <MyButton tip=\"Comments\">\r\n                    <ChatIcon color=\"primary\"/>\r\n                </MyButton>\r\n                <span>{commentCount} Comments</span>\r\n                <ScreamDialog screamId={screamId} username={username} openDialog={this.props.openDialog}/>\r\n            </CardContent>\r\n        </Card>) : null\r\n            \r\n        return (\r\n            goodScream\r\n        )\r\n    }\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    dateTag: PropTypes.object,\r\n    priceTag: PropTypes.string,\r\n    categoryTag: PropTypes.string,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n"]},"metadata":{},"sourceType":"module"}