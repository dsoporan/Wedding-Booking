{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, LOADING_UI, POST_SCREAM, CLEAR_ERRORS, SET_ERRORS } from '../types';\nimport axios from 'axios'; //Get all screams\n\nexport const getScreams = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/screams').then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: []\n    });\n  });\n}; //Post a scream\n\nexport const postScream = newScream => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/scream', newScream).then(res => {\n    dispatch({\n      type: POST_SCREAM,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //Like a scream\n\nexport const likeScream = screamId => dispatch => {\n  axios.get(`scream/${screamId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Unlike a scream\n\nexport const unlikeScream = screamId => dispatch => {\n  axios.get(`scream/${screamId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteScream = screamId => dispatch => {\n  axios.delete(`/scream/${screamId}`).then(() => {\n    dispatch({\n      type: DELETE_SCREAM,\n      payload: screamId\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/Darian/Desktop/Thesis/wedding-booking-client/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","LOADING_UI","POST_SCREAM","CLEAR_ERRORS","SET_ERRORS","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","postScream","newScream","post","response","likeScream","screamId","console","log","unlikeScream","deleteScream","delete"],"mappings":"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","sourcesContent":["import {SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, LOADING_UI, POST_SCREAM, CLEAR_ERRORS, SET_ERRORS} from '../types';\r\nimport axios from 'axios';\r\n\r\n//Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get('/screams')\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err =>{\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: []\r\n        })\r\n    })\r\n}\r\n\r\n//Post a scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/scream', newScream)\r\n    .then(res => {\r\n        dispatch({\r\n            type: POST_SCREAM,\r\n            payload: res.data\r\n        });\r\n        dispatch({type: CLEAR_ERRORS});\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    })\r\n}\r\n\r\n//Like a scream\r\nexport const likeScream = (screamId) => dispatch => {\r\n    axios.get(`scream/${screamId}/like`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: LIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Unlike a scream\r\nexport const unlikeScream = (screamId) => dispatch => {\r\n    axios.get(`scream/${screamId}/unlike`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: UNLIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n        dispatch({\r\n            type: DELETE_SCREAM,\r\n            payload: screamId\r\n            })\r\n    })\r\n    .catch(err => console.log(err));\r\n}"]},"metadata":{},"sourceType":"module"}