{"ast":null,"code":"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM } from '../types';\nconst initialState = {\n  screams: [],\n  scream: {},\n  package: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case SET_SCREAM:\n      return { ...state,\n        scream: action.payload\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n\n      if (state.scream.screamId === action.payload.screamId) {\n        let commentsAll = state.scream.comments;\n        state.scream = action.payload;\n        state.scream.comments = commentsAll;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      let indexDel = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(indexDel, 1);\n      return { ...state\n      };\n\n    case EDIT_SCREAM:\n      let indexEdit = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream.body = action.payload.body;\n        state.scream.name = action.payload.name;\n        state.scream.price = action.payload.price;\n        state.scream.busyDates = action.payload.busyDates;\n      }\n\n      state.screams[indexEdit] = state.scream;\n      return { ...state\n      };\n\n    case BOOK_SCREAM:\n      let indexBook = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[indexBook].busyDates.push(action.payload.date);\n      return { ...state\n      };\n\n    case POST_SCREAM:\n      return { ...state,\n        screams: [action.payload, ...state.screams]\n      };\n\n    case SUBMIT_COMMENT:\n      let indexComm = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[indexComm].commentCount = action.payload.commentCount;\n      state.scream.commentCount = action.payload.commentCount;\n      return { ...state,\n        screams: state.screams,\n        scream: { ...state.scream,\n          comments: [action.payload, ...state.scream.comments]\n        }\n      };\n\n    case SET_PACKAGE:\n      return { ...state,\n        package: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","DELETE_SCREAM","POST_SCREAM","SET_SCREAM","SUBMIT_COMMENT","EDIT_SCREAM","BOOK_SCREAM","initialState","screams","scream","package","loading","state","action","type","payload","index","findIndex","screamId","commentsAll","comments","indexDel","splice","indexEdit","body","name","price","busyDates","indexBook","push","date","indexComm","commentCount","SET_PACKAGE"],"mappings":"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","sourcesContent":["import {SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM} from '../types';\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    package: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_SCREAM:\r\n            return{\r\n                ...state,\r\n                scream: action.payload\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                let commentsAll = state.scream.comments;\r\n                state.scream = action.payload;\r\n                state.scream.comments = commentsAll;\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_SCREAM:\r\n            let indexDel = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            state.screams.splice(indexDel, 1);\r\n            return {\r\n                ...state,\r\n            }\r\n        case EDIT_SCREAM:\r\n            let indexEdit = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                state.scream.body = action.payload.body;\r\n                state.scream.name = action.payload.name;\r\n                state.scream.price = action.payload.price;\r\n                state.scream.busyDates = action.payload.busyDates;\r\n            }\r\n            state.screams[indexEdit] = state.scream;\r\n            return {\r\n                ...state\r\n            }\r\n        case BOOK_SCREAM:\r\n            let indexBook = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[indexBook].busyDates.push(action.payload.date);\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            let indexComm = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[indexComm].commentCount = action.payload.commentCount;\r\n            state.scream.commentCount = action.payload.commentCount;\r\n            return {\r\n                ...state,\r\n                screams: state.screams,\r\n                scream: {\r\n                    ...state.scream,\r\n                    comments: [\r\n                        action.payload,\r\n                        ...state.scream.comments\r\n                    ]\r\n                }\r\n            }\r\n        case SET_PACKAGE:\r\n            return {\r\n                ...state,\r\n                package: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}