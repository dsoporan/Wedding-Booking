{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\ScreamDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport { Slide } from 'react-slideshow-image'; //MUI stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LikeButton from './LikeButton'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; //redux\n\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors, getScreams, getUserData } from '../../redux/actions/dataActions';\nconst styles = {\n  invisibleSeparator: {\n    border: 'none',\n    margin: 10\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: '50%',\n    objectFit: 'cover'\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '90%'\n  },\n  expandButton: {\n    position: 'absolute',\n    left: '90%'\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  visibleSeparator: {\n    width: '100%',\n    borderBottom: '1px solid rgba(0,0,0,0.1)',\n    marginBottom: 20\n  },\n  slide: {\n    objectFit: 'cover',\n    width: '100%',\n    height: '300px'\n  },\n  photosPost: {\n    minWidth: '100%',\n    height: 300,\n    objectFit: 'cover'\n  },\n  bodyText: {\n    textAlign: 'justify'\n  }\n};\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      console.log('Old Path1:');\n      console.log(oldPath);\n      const {\n        username,\n        screamId\n      } = this.props;\n      let newPath = `/users/${username}/scream/${screamId}`;\n      console.log('New:');\n      console.log(newPath);\n\n      if (oldPath === newPath) {\n        oldPath = `/users/${username}`;\n      }\n\n      console.log('Old Path2:');\n      console.log(oldPath);\n\n      if (this.state.oldPath !== `/users/${this.props.username}`) {\n        console.log(\"intra\");\n        window.history.pushState(null, null, newPath);\n      }\n\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n      window.history.pushState(null, null, this.state.oldPath);\n      if (this.state.oldPath === '/') this.props.getScreams();else this.props.getUserData(this.props.username);\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const properties = {\n      duration: 5000,\n      transitionDuration: 500,\n      infinite: true,\n      indicators: true,\n      arrows: true,\n      pauseOnHover: true\n    };\n    const {\n      classes,\n      scream: {\n        photos,\n        name,\n        category,\n        price,\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        username,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })) : React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, username), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, name), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.bodyText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, body), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Category: \", category), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Price: \", price, \" \\u20AC\"), React.createElement(LikeButton, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, likeCount, \" Likes\"), React.createElement(MyButton, {\n      tip: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, commentCount, \" Comments\")), photos && React.createElement(Slide, Object.assign({\n      className: classes.slide\n    }, properties, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), photos.map(photo => {\n      return React.createElement(\"div\", {\n        key: photo,\n        className: \"each-slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.photosPost,\n        src: photo,\n        alt: \"Presentation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    })), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(CommentForm, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand Post\",\n      tipClassName: classes.expandButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  getScreams: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScreams,\n  getScream,\n  clearErrors,\n  getUserData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Comments","CommentForm","Slide","Dialog","DialogContent","CircularProgress","Grid","Typography","LikeButton","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","getScreams","getUserData","styles","invisibleSeparator","border","margin","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","visibleSeparator","width","borderBottom","slide","photosPost","minWidth","bodyText","ScreamDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","console","log","username","screamId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","properties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","classes","scream","photos","name","category","price","body","createdAt","likeCount","commentCount","userImage","comments","UI","loading","dialogMarkup","format","map","photo","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Comments from './Comments'\r\nimport CommentForm from './CommentForm';\r\n\r\nimport { Slide } from 'react-slideshow-image';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LikeButton from './LikeButton';\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, clearErrors, getScreams, getUserData} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 10\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    },\r\n    slide: {\r\n        objectFit: 'cover',\r\n        width: '100%',\r\n        height: '300px'\r\n    },\r\n    photosPost: {\r\n        minWidth: '100%',\r\n        height: 300,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass ScreamDialog extends Component{\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        console.log('Old Path1:');\r\n        console.log(oldPath);\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        console.log('New:');\r\n        console.log(newPath);\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n\r\n        console.log('Old Path2:');\r\n        console.log(oldPath);\r\n\r\n        if(this.state.oldPath !== `/users/${this.props.username}`){\r\n            console.log(\"intra\");\r\n            window.history.pushState(null, null, newPath);\r\n        }\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open:false});\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        if (this.state.oldPath === '/')\r\n            this.props.getScreams();\r\n        else\r\n            this.props.getUserData(this.props.username);\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const properties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            infinite: true,\r\n            indicators: true,\r\n            arrows: true,\r\n            pauseOnHover: true,\r\n        }\r\n        const {classes, scream : {photos, name, category, price, screamId, body, createdAt, likeCount, commentCount, userImage, username, comments},\r\n         UI: {loading}} = this.props;\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n             <Grid container spacing={4}>\r\n                 <Grid item sm={5}>\r\n                     <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\r\n                 </Grid>\r\n                 <Grid item sm={7}>\r\n                    <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${username}`}>\r\n                        {username}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">{name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">\r\n                        {body}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">Category: {category}</Typography>\r\n                    <Typography variant=\"h6\">Price: {price} €</Typography>\r\n                    <LikeButton screamId={screamId}/>\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                 </Grid>\r\n                 {photos && (\r\n                     <Slide className={classes.slide} {...properties}>\r\n                         {photos.map((photo) => {return(\r\n                            <div key={photo} className=\"each-slide\">\r\n                                <img className={classes.photosPost} src={photo} alt=\"Presentation\"/>\r\n                            </div>\r\n                         )})}\r\n                    </Slide>\r\n                 )}\r\n                 <hr className={classes.visibleSeparator}/>\r\n                 <CommentForm screamId={screamId}/>\r\n                 <Comments comments={comments}/>\r\n             </Grid>\r\n         )\r\n\r\n         return (\r\n             <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Expand Post\" tipClassName={classes.expandButton}>\r\n                     <UnfoldMore color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n         )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    getScreams: PropTypes.func.isRequired,\r\n    getUserData: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScreams,\r\n    getScream,\r\n    clearErrors,\r\n    getUserData,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));"]},"metadata":{},"sourceType":"module"}