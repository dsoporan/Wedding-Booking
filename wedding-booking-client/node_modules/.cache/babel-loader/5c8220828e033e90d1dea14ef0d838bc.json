{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\ScreamDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm'; //MUI stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LikeButton from './LikeButton'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; //redux\n\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors, getScreams } from '../../redux/actions/dataActions';\nconst styles = {\n  invisibleSeparator: {\n    border: 'none',\n    margin: 4\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: '50%',\n    objectFit: 'cover'\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '92%'\n  },\n  expandButton: {\n    position: 'absolute',\n    left: '90%'\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  visibleSeparator: {\n    width: '100%',\n    borderBottom: '1px solid rgba(0,0,0,0.1)',\n    marginBottom: 20\n  }\n};\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        username,\n        screamId\n      } = this.props;\n      let newPath = `/users/${username}/scream/${screamId}`;\n\n      if (oldPath === newPath) {\n        oldPath = `/users/${username}`;\n      }\n\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.scream.commentCount !== prevProps.scream.commentCount) {\n      console.log(\"Changed\");\n      this.forceUpdate();\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        username,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })) : React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, username), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, body), React.createElement(LikeButton, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, likeCount, \" Likes\"), React.createElement(MyButton, {\n      tip: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, commentCount, \" Comments\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(CommentForm, {\n      screamId: screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand Post\",\n      tipClassName: classes.expandButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  getScreams: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors,\n  getScreams\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Comments","CommentForm","Dialog","DialogContent","CircularProgress","Grid","Typography","LikeButton","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","getScreams","styles","invisibleSeparator","border","margin","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","visibleSeparator","width","borderBottom","ScreamDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","username","screamId","props","history","pushState","setState","handleClose","componentDidUpdate","prevProps","scream","commentCount","console","log","forceUpdate","componentDidMount","openDialog","render","classes","body","createdAt","likeCount","userImage","comments","UI","loading","dialogMarkup","format","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Comments from './Comments'\r\nimport CommentForm from './CommentForm';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LikeButton from './LikeButton';\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, clearErrors, getScreams} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '92%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    }\r\n}\r\n\r\nclass ScreamDialog extends Component{\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    };\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.scream.commentCount !== prevProps.scream.commentCount){\r\n            console.log(\"Changed\");\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({open:false});\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    render(){\r\n        const {classes, scream : {screamId, body, createdAt, likeCount, commentCount, userImage, username, comments},\r\n         UI: {loading}} = this.props;\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n             <Grid container spacing={4}>\r\n                 <Grid item sm={5}>\r\n                     <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\r\n                 </Grid>\r\n                 <Grid item sm={7}>\r\n                    <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${username}`}>\r\n                        {username}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography variant=\"body1\">\r\n                        {body}\r\n                    </Typography>\r\n                    <LikeButton screamId={screamId}/>\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                 </Grid>\r\n                 <hr className={classes.visibleSeparator}/>\r\n                 <CommentForm screamId={screamId}/>\r\n                 <Comments comments={comments}/>\r\n             </Grid>\r\n         )\r\n\r\n         return (\r\n             <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Expand Post\" tipClassName={classes.expandButton}>\r\n                     <UnfoldMore color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n         )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    getScreams: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors,\r\n    getScreams\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));"]},"metadata":{},"sourceType":"module"}