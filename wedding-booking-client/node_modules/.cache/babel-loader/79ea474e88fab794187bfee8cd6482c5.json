{"ast":null,"code":"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM } from '../types';\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(index, 1);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Darian/Desktop/Thesis/wedding-booking-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","DELETE_SCREAM","initialState","screams","scream","loading","state","action","type","payload","index","findIndex","screamId","splice"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,YAAjD,EAA+DC,aAA/D,QAAmF,UAAnF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHD,QAAAA,OAAO,EAAC;AAFL,OAAP;;AAIJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFd;AAGFJ,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKP,WAAL;AACA,SAAKC,aAAL;AACI,UAAIW,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CAAyBP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QAAvE,CAAZ;AACAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBH,MAAM,CAACE,OAA9B;AACA,aAAO,EACH,GAAGH;AADA,OAAP;;AAGJ,SAAKL,aAAL;AACIS,MAAAA,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CAAyBP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAA/D,CAAR;AACAH,MAAAA,KAAK,CAACH,OAAN,CAAcU,MAAd,CAAqBH,KAArB,EAA4B,CAA5B;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AA1BR;AA4BH","sourcesContent":["import {SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM} from '../types';\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_SCREAM:\r\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            state.screams.splice(index, 1);\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}