{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\Booking.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport dayjs from 'dayjs';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './LikeButton';\nimport { connect } from 'react-redux'; //Icons\n\nimport ChatIcon from '@material-ui/icons/Chat'; //MUI\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nconst styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  },\n  bodyText: {\n    textAlign: 'justify'\n  }\n};\n\nclass Booking extends Component {\n  render() {\n    const {\n      booking,\n      classes\n    } = this.props;\n    const {\n      screams\n    } = this.props.data;\n    let goodBooking = null;\n\n    if (screams.length > 0) {\n      let index = screams.findIndex(scream => scream.screamId === booking.screamId);\n      let scream = screams[index];\n      goodBooking = React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        image: scream.userImage,\n        title: \"Profile Picture\",\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, dayjs(booking.date).format('DD MMMM YYYY')), React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, scream.name), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, dayjs(scream.createdAt).fromNow()), React.createElement(Typography, {\n        className: classes.bodyText,\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, scream.body), React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Price: \", scream.price, \" \\u20AC\"), React.createElement(LikeButton, {\n        screamId: scream.screamId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, scream.likeCount, \" Likes\"), React.createElement(MyButton, {\n        tip: \"Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ChatIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, scream.commentCount, \" Comments\")));\n    }\n\n    return goodBooking;\n  }\n\n}\n\nBooking.propTypes = {\n  booking: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Booking));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/Booking.js"],"names":["React","Component","withStyles","Typography","dayjs","PropTypes","MyButton","LikeButton","connect","ChatIcon","Card","CardContent","CardMedia","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","bodyText","textAlign","Booking","render","booking","classes","props","screams","data","goodBooking","length","index","findIndex","scream","screamId","userImage","date","format","name","createdAt","fromNow","body","price","likeCount","commentCount","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport dayjs from 'dayjs';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n//Icons\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass Booking extends Component {\r\n\r\n    render() {\r\n        const {booking, classes} = this.props;\r\n        const{screams} = this.props.data;\r\n        let goodBooking = null;\r\n        if (screams.length > 0){\r\n            let index = screams.findIndex((scream) => scream.screamId === booking.screamId);\r\n            let scream = screams[index];\r\n            goodBooking = (<Card className={classes.card}>\r\n                <CardMedia image={scream.userImage} title=\"Profile Picture\" className={classes.image}/>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" color=\"primary\">{dayjs(booking.date).format('DD MMMM YYYY')}</Typography>\r\n                    <Typography variant=\"h6\">{scream.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(scream.createdAt).fromNow()}</Typography>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">{scream.body}</Typography>\r\n                    <Typography variant=\"h6\">Price: {scream.price} €</Typography>\r\n                    <LikeButton screamId={scream.screamId}/>\r\n                    <span>{scream.likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{scream.commentCount} Comments</span>\r\n                </CardContent>\r\n            </Card>);\r\n        }\r\n        return (goodBooking);\r\n    }\r\n}\r\n\r\nBooking.propTypes = {\r\n    booking: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    data: state.data\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Booking));\r\n"]},"metadata":{},"sourceType":"module"}