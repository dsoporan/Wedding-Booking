{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\Thesis\\\\wedding-booking-client\\\\src\\\\components\\\\EditDetails.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/iconsEdit';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle'; //Redux\n\nimport { connect } from 'react-redux';\nimport { editUserDetails } from '../redux/actions/userActions';\nimport { Icon } from '@material-ui/core';\nconst styles = {};\nexport class EditDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bio: \"\",\n      website: \"\",\n      location: \"\",\n      open: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const userDetails = {\n        bio: this.state.bio,\n        website: this.state.website,\n        location: this.state.location\n      };\n      this.props.editUserDetails(userDetails);\n      this.handleClose();\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.mapUserDetailsToState = credentials => {\n      this.setState({\n        bio: credentials.bio ? credentials.bio : '',\n        website: credentials.website ? credentials.website : '',\n        location: credentials.location ? credentials.location : ''\n      });\n    };\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n    this.mapUserDetailsToState(this.props.credentials);\n  }\n\n  componentDidMount() {\n    const {\n      credentials\n    } = this.props;\n    this.mapUserDetailsToState(credentials);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Edit Details\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleOpen,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Edit your details\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"bio\",\n      type: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeHolder: \"A short bio about yourself\",\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"website\",\n      type: \"text\",\n      label: \"Website\",\n      placeHolder: \"Your personal website\",\n      className: classes.website,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"location\",\n      type: \"text\",\n      label: \"Location\",\n      placeHolder: \"Where you live\",\n      className: classes.location,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {\n  editUserDetails\n})(withStyles(styles)(EditDetails));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/Thesis/wedding-booking-client/src/components/EditDetails.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Tooltip","IconButton","EditIcon","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","connect","editUserDetails","Icon","styles","EditDetails","state","bio","website","location","open","handleChange","event","setState","target","name","value","handleSubmit","userDetails","props","handleClose","mapUserDetailsToState","credentials","handleOpen","componentDidMount","render","classes","button","textField","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/iconsEdit';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {editUserDetails} from '../redux/actions/userActions';\r\nimport { Icon } from '@material-ui/core';\r\n\r\nconst styles = {\r\n\r\n}\r\n\r\nexport class EditDetails extends Component {\r\n\r\n    state = {\r\n        bio: \"\",\r\n        website: \"\",\r\n        location: \"\",\r\n        open: false\r\n    }\r\n\r\n    handleOpen(){\r\n        this.setState({open: true});\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        }\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open:false});\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {credentials} = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n           <Fragment>\r\n               <Tooltip title=\"Edit Details\" placement=\"top\">\r\n                    <IconButton onClick={this.handleOpen} className={classes.button}>\r\n                        <EditIcon color=\"primary\"/>\r\n                    </IconButton>\r\n               </Tooltip>\r\n               <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                   <DialogTitle>\r\n                       Edit your details\r\n                   </DialogTitle>\r\n                   <DialogContent>\r\n                       <form>\r\n                            <TextField name=\"bio\" type=\"text\" label=\"Bio\" multiline rows=\"3\" placeHolder=\"A short bio about yourself\"\r\n                            className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"website\" type=\"text\" label=\"Website\" placeHolder=\"Your personal website\"\r\n                            className={classes.website} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"location\" type=\"text\" label=\"Location\" placeHolder=\"Where you live\"\r\n                            className={classes.location} onChange={this.handleChange} fullWidth/>\r\n                       </form>\r\n                   </DialogContent>\r\n                   <DialogActions>\r\n                       <Button onClick={this.handleClose} color=\"primary\">\r\n                           Cancel\r\n                       </Button>\r\n                       <Button onClick={this.handleSubmit} color=\"primary\">\r\n                           Save\r\n                       </Button>\r\n                   </DialogActions>\r\n               </Dialog>\r\n           </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\r\n"]},"metadata":{},"sourceType":"module"}