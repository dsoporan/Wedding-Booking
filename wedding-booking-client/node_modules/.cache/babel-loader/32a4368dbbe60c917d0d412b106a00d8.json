{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\EditScream.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport { Slide } from 'react-slideshow-image'; //MUI stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LikeButton from './LikeButton'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Edit from '@material-ui/icons/Edit';\nimport ChatIcon from '@material-ui/icons/Chat'; //redux\n\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\nconst styles = {\n  closeButton: {\n    position: 'absolute',\n    left: '90%'\n  },\n  editButton: {\n    position: 'absolute',\n    left: '84%',\n    top: '10%'\n  },\n  dialogContent: {\n    padding: 20\n  }\n};\n\nclass EditScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: '',\n      name: '',\n      body: '',\n      price: '',\n      busyDates: [],\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        username,\n        screamId\n      } = this.props;\n      let newPath = `/users/${username}/scream/${screamId}`;\n\n      if (oldPath === newPath) {\n        oldPath = `/users/${username}`;\n      }\n\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        photos,\n        name,\n        category,\n        price,\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        username,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Something\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Edit Post\",\n      tipClassName: classes.editButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Edit, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nEditScream.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(EditScream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/EditScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Comments","CommentForm","Slide","Dialog","DialogContent","CircularProgress","Grid","Typography","LikeButton","CloseIcon","Edit","ChatIcon","connect","getScream","clearErrors","styles","closeButton","position","left","editButton","top","dialogContent","padding","EditScream","state","open","oldPath","newPath","name","body","price","busyDates","errors","handleOpen","window","location","pathname","username","screamId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","classes","scream","photos","category","createdAt","likeCount","commentCount","userImage","comments","UI","loading","dialogMarkup","spinnerDiv","propTypes","func","isRequired","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Comments from './Comments'\r\nimport CommentForm from './CommentForm';\r\n\r\nimport { Slide } from 'react-slideshow-image';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LikeButton from './LikeButton';\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, clearErrors} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '90%'\r\n    },\r\n    editButton: {\r\n        position: 'absolute',\r\n        left: '84%',\r\n        top: '10%',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n}\r\n\r\nclass EditScream extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: '',\r\n        name: '',\r\n        body: '',\r\n        price: '',\r\n        busyDates: [],\r\n        errors: {}\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({open:false});\r\n        this.props.clearErrors();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {classes, scream : {photos, name, category, price, screamId, body, createdAt, likeCount, commentCount, userImage, username, comments},\r\n         UI: {loading}} = this.props;\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n             <p>Something</p>\r\n         )\r\n\r\n\r\n         return (\r\n            <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Edit Post\" tipClassName={classes.editButton}>\r\n                     <Edit color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditScream.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(EditScream));\r\n"]},"metadata":{},"sourceType":"module"}