{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\pages\\\\user.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Scream from '../components/scream/Scream';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport ScreamSkeleton from '../util/ScreamSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null,\n      screamIdParam: null\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    const screamId = this.props.match.params.screamId;\n    if (screamId) this.setState({\n      screamIdParam: screamId\n    });\n    this.props.getUserData(username);\n    axios.get(`/user/${username}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      screams,\n      loading\n    } = this.props.data;\n    const {\n      screamIdParam\n    } = this.state;\n    const screamsMarkup = loading ? React.createElement(ScreamSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : screams === null ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"No posts from this user\") : !screamIdParam ? screams.map(scream => React.createElement(Scream, {\n      key: scream.screamId,\n      scream: scream,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })) : screams.map(scream => {\n      if (scream.screamId !== screamIdParam) return React.createElement(Scream, {\n        key: scream.screamId,\n        scream: scream,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });else return React.createElement(Scream, {\n        key: scream.screamId,\n        scream: scream,\n        openDialog: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, screamsMarkup), React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.profile === null ? React.createElement(ProfileSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : React.createElement(StaticProfile, {\n      profile: this.state.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/pages/user.js"],"names":["React","Component","PropTypes","axios","Scream","Grid","connect","getUserData","StaticProfile","ScreamSkeleton","ProfileSkeleton","user","state","profile","screamIdParam","componentDidMount","username","props","match","params","screamId","setState","get","then","res","data","catch","err","console","log","render","screams","loading","screamsMarkup","map","scream","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAGA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBW,KAFyB,GAEjB;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAFiB;AAAA;;AAOzBC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAAzC;AACA,UAAMI,QAAQ,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,QAAzC;AAEA,QAAGA,QAAH,EACI,KAAKC,QAAL,CAAc;AAACP,MAAAA,aAAa,EAAEM;AAAhB,KAAd;AAEJ,SAAKH,KAAL,CAAWV,WAAX,CAAuBS,QAAvB;AACAb,IAAAA,KAAK,CAACmB,GAAN,CAAW,SAAQN,QAAS,EAA5B,EACCO,IADD,CACMC,GAAG,IAAI;AACT,WAAKH,QAAL,CAAc;AACVR,QAAAA,OAAO,EAAEW,GAAG,CAACC,IAAJ,CAASd;AADR,OAAd;AAGH,KALD,EAMCe,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd;AAOH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAqB,KAAKf,KAAL,CAAWQ,IAAtC;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAoB,KAAKF,KAA/B;AAEA,UAAMqB,aAAa,GAAGD,OAAO,GACzB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB,GAEzBD,OAAO,KAAK,IAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,GAEA,CAACjB,aAAD,GACAiB,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACf,QAApB;AAA8B,MAAA,MAAM,EAAEe,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADA,GAGAJ,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AAClB,UAAIA,MAAM,CAACf,QAAP,KAAoBN,aAAxB,EACC,OAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEqB,MAAM,CAACf,QAApB;AAA8B,QAAA,MAAM,EAAEe,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADD,KAGI,OAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACf,QAApB;AAA8B,QAAA,MAAM,EAAEe,MAAtC;AAA8C,QAAA,UAAU,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KALD,CAPJ;AAcA,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,aADL,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,OAAX,KAAuB,IAAvB,GACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT,CAJJ,CADJ;AAYH;;AAtDwB;;AAyD7BF,IAAI,CAACyB,SAAL,GAAiB;AACb7B,EAAAA,WAAW,EAAEL,SAAS,CAACmC,IAAV,CAAeC,UADf;AAEbb,EAAAA,IAAI,EAAEvB,SAAS,CAACqC,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAI5B,KAAD,KAAY;AAChCa,EAAAA,IAAI,EAAEb,KAAK,CAACa;AADoB,CAAZ,CAAxB;;AAIA,eAAenB,OAAO,CAACkC,eAAD,EAAkB;AAACjC,EAAAA;AAAD,CAAlB,CAAP,CAAwCI,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Scream from '../components/scream/Scream';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {connect} from 'react-redux';\r\nimport {getUserData} from '../redux/actions/dataActions';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\n\r\nclass user extends Component {\r\n\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        const username = this.props.match.params.username;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if(screamId) \r\n            this.setState({screamIdParam: screamId});\r\n\r\n        this.props.getUserData(username);\r\n        axios.get(`/user/${username}`)\r\n        .then(res => {\r\n            this.setState({\r\n                profile: res.data.user\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const {screams, loading} = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <ScreamSkeleton/>\r\n        ) : screams === null ? (\r\n            <p>No posts from this user</p>\r\n        ) : !screamIdParam ? (\r\n            screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : (\r\n            screams.map(scream => {\r\n                if (scream.screamId !== screamIdParam)\r\n                 return <Scream key={scream.screamId} scream={scream}/>\r\n                else\r\n                    return <Scream key={scream.screamId} scream={scream} openDialog/>\r\n            })\r\n        )\r\n        return (\r\n            <Grid container spacing={4}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton/>\r\n                    ) : (<StaticProfile profile={this.state.profile}/>)}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData})(user);\r\n"]},"metadata":{},"sourceType":"module"}