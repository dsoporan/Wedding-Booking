{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\PostScream.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport ImageUploader from 'react-images-upload'; //Select\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; //Redux\n\nimport { connect } from 'react-redux';\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\nconst styles = {\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  formControl: {\n    margin: '10px 20px 10px auto',\n    minWidth: 120\n  },\n  submitButton: {\n    position: 'relative',\n    float: 'right',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  progressSpinner: {\n    position: 'absolute'\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '91%',\n    top: '3%'\n  },\n  divText: {\n    marginTop: '10px'\n  }\n};\n\nclass PostScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      name: '',\n      body: '',\n      category: 'Others',\n      price: '',\n      busyDates: [],\n      photos: [],\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.clearErrors();\n      this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.props.postScream({\n        name: this.state.name,\n        body: this.state.body,\n        category: this.state.category,\n        price: this.state.price,\n        busyDates: this.state.busyDates\n      }));\n    };\n\n    this.handleDayClick = (day, {\n      selected\n    }) => {\n      const {\n        busyDates\n      } = this.state;\n\n      if (selected) {\n        const selectedIndex = busyDates.findIndex(selectedDay => DateUtils.isSameDay(selectedDay, day));\n        busyDates.splice(selectedIndex, 1);\n      } else {\n        busyDates.push(day);\n      }\n\n      console.log(busyDates);\n      this.setState({\n        busyDates\n      });\n    };\n\n    this.onDrop = picture => {\n      photos.push(picture);\n      this.setState({\n        photos\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        name: '',\n        body: '',\n        category: 'Others',\n        price: '',\n        busyDates: [],\n        photos: [],\n        open: false,\n        errors: {}\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"New Post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"New post\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"name\",\n      type: \"text\",\n      label: \"Add a name\",\n      placeholder: \"Post Name\",\n      error: errors.name ? true : false,\n      helperText: errors.name,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Add a post\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"New Post\",\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      name: \"category\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Select, {\n      name: \"category\",\n      value: this.state.category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 'EventHall',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Location / EventHall\"), React.createElement(MenuItem, {\n      value: 'Music',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Music\"), React.createElement(MenuItem, {\n      value: 'Entertainment',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Entertainment\"), React.createElement(MenuItem, {\n      value: 'Others',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Others\"))), React.createElement(TextField, {\n      name: \"price\",\n      type: \"text\",\n      label: \"Price\",\n      placeholder: \"\\u20AC\",\n      error: errors.price ? true : false,\n      helperText: errors.price,\n      className: classes.textField,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.divText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Choose the Dates that you are not available:\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(DayPicker, {\n      disabledDays: {\n        before: new Date()\n      },\n      selectedDays: this.state.busyDates,\n      onDayClick: this.handleDayClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(ImageUploader, {\n      withPreview: true,\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      label: \"Upload maximum 5 images\",\n      imgExtension: ['.jpg', '.png'],\n      maxFileSize: 5242880,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Submit\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postScream,\n  clearErrors\n})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/PostScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","DayPicker","DateUtils","ImageUploader","InputLabel","MenuItem","FormControl","Select","connect","postScream","clearErrors","styles","textField","margin","formControl","minWidth","submitButton","position","float","marginTop","marginBottom","progressSpinner","closeButton","left","top","divText","PostScream","state","open","name","body","category","price","busyDates","photos","errors","handleOpen","setState","handleClose","props","handleChange","event","target","value","handleSubmit","preventDefault","console","log","handleDayClick","day","selected","selectedIndex","findIndex","selectedDay","isSameDay","splice","push","onDrop","picture","componentWillReceiveProps","nextProps","UI","loading","render","classes","before","Date","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n//Select\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {postScream, clearErrors} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    textField: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    formControl: {\r\n        margin: '10px 20px 10px auto',\r\n        minWidth: 120,\r\n\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '3%'\r\n    },\r\n    divText: {\r\n        marginTop: '10px',\r\n    }\r\n}\r\n\r\nclass PostScream extends Component{\r\n    state = {\r\n        open: false,\r\n        name: '',\r\n        body: '',\r\n        category: 'Others',\r\n        price: '',\r\n        busyDates: [],\r\n        photos: [],\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({ name: '',\r\n            body: '',\r\n            category: 'Others',\r\n            price: '',\r\n            busyDates: [],\r\n            photos: [], \r\n            open:false, \r\n            errors: {}});\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open:true});\r\n    }\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({open:false, errors: {}});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.props.postScream({\r\n            name: this.state.name,\r\n            body: this.state.body,\r\n            category: this.state.category,\r\n            price: this.state.price,\r\n            busyDates: this.state.busyDates,\r\n        }));\r\n    }\r\n\r\n    handleDayClick = (day, { selected }) => {\r\n        const { busyDates } = this.state;\r\n        if (selected) {\r\n          const selectedIndex = busyDates.findIndex(selectedDay =>\r\n            DateUtils.isSameDay(selectedDay, day)\r\n          );\r\n          busyDates.splice(selectedIndex, 1);\r\n        } else {\r\n          busyDates.push(day);\r\n        }\r\n        console.log(busyDates);\r\n        this.setState({ busyDates });\r\n      }\r\n    onDrop = (picture) => {\r\n        photos.push(picture);\r\n        this.setState({photos});\r\n    }\r\n\r\n    render(){\r\n        const {errors} = this.state;\r\n        const {classes, UI: {loading}} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"New Post\">\r\n                    <AddIcon/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogTitle>\r\n                        New post\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField name=\"name\" type=\"text\" label=\"Add a name\" placeholder=\"Post Name\" error={errors.name ? true : false}\r\n                            helperText={errors.name} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                            <TextField name=\"body\" type=\"text\" label=\"Add a post\" multiline rows=\"3\" placeholder=\"New Post\" error={errors.body ? true : false}\r\n                            helperText={errors.body} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                            <FormControl name=\"category\" className={classes.formControl}>\r\n                                <InputLabel>Category</InputLabel>\r\n                                <Select name=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                                    <MenuItem value={'EventHall'}>Location / EventHall</MenuItem>\r\n                                    <MenuItem value={'Music'}>Music</MenuItem>\r\n                                    <MenuItem value={'Entertainment'}>Entertainment</MenuItem>\r\n                                    <MenuItem value={'Others'}>Others</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField name=\"price\" type=\"text\" label=\"Price\" placeholder=\"€\" error={errors.price ? true : false}\r\n                            helperText={errors.price} className={classes.textField} onChange={this.handleChange}/>\r\n                            <br/>\r\n                            <div className={classes.divText}>\r\n                            <span>Choose the Dates that you are not available:</span>\r\n                            </div>\r\n                            <br/>\r\n                            <DayPicker disabledDays={{ before: new Date() }} selectedDays={this.state.busyDates} onDayClick={this.handleDayClick}/>\r\n                            <br/>\r\n                            <ImageUploader withPreview={true} withIcon={true} buttonText='Choose images' onChange={this.onDrop} label=\"Upload maximum 5 images\" imgExtension={['.jpg', '.png']} maxFileSize={5242880}/>\r\n                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                             Submit\r\n                             {loading && (\r\n                                 <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                             )}\r\n                         </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    UI:PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postScream, clearErrors})(withStyles(styles)(PostScream));"]},"metadata":{},"sourceType":"module"}