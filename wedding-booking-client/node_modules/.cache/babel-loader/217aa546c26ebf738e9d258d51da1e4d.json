{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, LOADING_UI, POST_SCREAM, CLEAR_ERRORS, SET_ERRORS, STOP_LOADING_UI, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM } from '../types';\nimport axios from 'axios'; //Get all screams\n\nexport const getScreams = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/screams').then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: []\n    });\n  });\n};\nexport const getScream = screamId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/scream/${screamId}`).then(res => {\n    dispatch({\n      type: SET_SCREAM,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; //Post a scream\n\nexport const postScream = (newScream, photos) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/scream', newScream).then(res => {\n    dispatch({\n      type: POST_SCREAM,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    return res.data;\n  }).then(res => {\n    if (photos[0].length > 0) {\n      const formData = new FormData();\n      photos[0].forEach((photo, index) => {\n        formData.append('image' + index, photo, photo.name);\n      });\n      dispatch(uploadMultipleImages(res.screamId, formData));\n    }\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const uploadMultipleImages = (screamId, formData) => dispatch => {\n  axios.post(`/scream/${screamId}/photos`, formData).then(() => {\n    dispatch(getScream(screamId));\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //Like a scream\n\nexport const likeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Unlike a scream\n\nexport const unlikeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const submitComment = (screamId, commentData) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(`/scream/${screamId}/comment`, commentData).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n  dispatch(getScreams());\n};\nexport const editScream = (screamId, screamEdit) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(`/scream/${screamId}/edit`, screamEdit).then(res => {\n    dispatch({\n      type: EDIT_SCREAM,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const bookScream = (screamId, booking) => dispatch => {\n  axios.post(`/scream/${screamId}/book`, booking).then(res => {\n    dispatch({\n      type: BOOK_SCREAM,\n      payload: res.data\n    });\n    dispatch(getScreams());\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deleteScream = screamId => dispatch => {\n  axios.delete(`/scream/${screamId}`).then(() => {\n    dispatch({\n      type: DELETE_SCREAM,\n      payload: screamId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = username => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${username}`).then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data.screams\n    });\n  }).catch(() => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: null\n    });\n  });\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","LOADING_UI","POST_SCREAM","CLEAR_ERRORS","SET_ERRORS","STOP_LOADING_UI","SET_SCREAM","SUBMIT_COMMENT","EDIT_SCREAM","BOOK_SCREAM","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","getScream","screamId","console","log","postScream","newScream","photos","post","clearErrors","length","formData","FormData","forEach","photo","index","append","name","uploadMultipleImages","response","likeScream","unlikeScream","submitComment","commentData","editScream","screamEdit","bookScream","booking","deleteScream","delete","getUserData","username","screams"],"mappings":"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","sourcesContent":["import {SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM,\r\n     LOADING_UI, POST_SCREAM, CLEAR_ERRORS, SET_ERRORS,STOP_LOADING_UI, SET_SCREAM, SUBMIT_COMMENT, EDIT_SCREAM, BOOK_SCREAM} from '../types';\r\nimport axios from 'axios';\r\n\r\n//Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get('/screams')\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err =>{\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: []\r\n        })\r\n    })\r\n}\r\n\r\nexport const getScream = (screamId) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.get(`/scream/${screamId}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAM,\r\n            payload: res.data\r\n        });\r\n        dispatch({\r\n            type: STOP_LOADING_UI\r\n        });\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n//Post a scream\r\nexport const postScream = (newScream, photos) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/scream', newScream)\r\n    .then(res => {\r\n        dispatch({\r\n            type: POST_SCREAM,\r\n            payload: res.data\r\n        });\r\n        dispatch(clearErrors());\r\n        return res.data;\r\n    })\r\n    .then((res) => {\r\n        if (photos[0].length > 0){\r\n            const formData = new FormData();\r\n            photos[0].forEach((photo, index) => {\r\n                formData.append('image' + index, photo, photo.name);\r\n            })\r\n            dispatch(uploadMultipleImages(res.screamId, formData));\r\n        }\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    })\r\n}\r\n\r\nexport const uploadMultipleImages = (screamId, formData) => (dispatch) => {\r\n    axios.post(`/scream/${screamId}/photos`, formData)\r\n    .then(() => {\r\n        dispatch(getScream(screamId));\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    })\r\n}\r\n\r\n//Like a scream\r\nexport const likeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/like`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: LIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Unlike a scream\r\nexport const unlikeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/unlike`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: UNLIKE_SCREAM,\r\n            payload: res.data\r\n        })\r\n        \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n    dispatch({type: LOADING_UI})\r\n    axios.post(`/scream/${screamId}/comment`, commentData)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SUBMIT_COMMENT,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n    dispatch(getScreams());\r\n} \r\n\r\nexport const editScream = (screamId, screamEdit) => (dispatch) => {\r\n    dispatch({type: LOADING_UI})\r\n    axios.post(`/scream/${screamId}/edit`, screamEdit)\r\n    .then(res => {\r\n        dispatch({\r\n            type: EDIT_SCREAM,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n} \r\n\r\nexport const bookScream = (screamId, booking) => (dispatch) => {\r\n    axios.post(`/scream/${screamId}/book`, booking)\r\n    .then(res => {\r\n        dispatch({\r\n            type: BOOK_SCREAM,\r\n            payload: res.data\r\n        })\r\n        dispatch(getScreams());\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n} \r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n        dispatch({\r\n            type: DELETE_SCREAM,\r\n            payload: screamId\r\n            })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const getUserData = (username) => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get(`/user/${username}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data.screams\r\n        });\r\n    })\r\n    .catch(() => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: null\r\n        })\r\n    })\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({type: CLEAR_ERRORS});\r\n}"]},"metadata":{},"sourceType":"module"}