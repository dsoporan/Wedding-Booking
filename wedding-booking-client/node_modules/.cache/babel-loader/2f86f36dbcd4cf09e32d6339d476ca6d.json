{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\Thesis\\\\wedding-booking-client\\\\src\\\\components\\\\PostScream.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport MyButton from '../util/MyButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close'; //Redux\n\nimport { connect } from 'react-redux';\nimport { postScream } from '../redux/actions/dataActions';\nconst styles = {\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  submitButton: {\n    position: 'relative'\n  },\n  progressSpinner: {\n    position: 'absolute'\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '90%',\n    top: '10%'\n  }\n};\n\nclass PostScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      body: '',\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Post a scream\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Post a new scream\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Scream\",\n      multilime: true,\n      rows: \"3\",\n      placeholder: \"New Scream\",\n      errors: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postScream\n})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/Thesis/wedding-booking-client/src/components/PostScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Tooltip","IconButton","EditIcon","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postScream","styles","textField","margin","submitButton","position","progressSpinner","closeButton","left","top","PostScream","state","open","body","errors","handleOpen","setState","handleClose","render","classes","UI","loading","props","handleSubmit","handleChange","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyButton from '../util/MyButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport {postScream} from '../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    textField: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    submitButton: {\r\n        position: 'relative'\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n    }\r\n}\r\n\r\nclass PostScream extends Component{\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: {}\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({open:true});\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false});\r\n    }\r\n    render(){\r\n        const {errors} = this.state;\r\n        const {classes, UI: {loading}} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"Post a scream\">\r\n                    <AddIcon/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogTitle>\r\n                        Post a new scream\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField name=\"body\" type=\"text\" label=\"Scream\" multilime rows=\"3\" placeholder=\"New Scream\" errors={errors.body ? true : false}\r\n                            helperText={errors.body} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                             Submit\r\n                             {loading && (\r\n                                 <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                             )}\r\n                         </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    UI:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postScream})(withStyles(styles)(PostScream));"]},"metadata":{},"sourceType":"module"}