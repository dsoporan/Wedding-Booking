{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\SuggestScreamDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport MyButton from '../../util/MyButton';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookScream from './BookScream';\nimport LikeButton from './LikeButton'; //Mui Stuff\n\nimport Button from '@material-ui/core/Button';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport ChatIcon from '@material-ui/icons/Chat'; //select\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select'; //MUI Pickers\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { connect } from 'react-redux'; // import {bookScream} from '../../redux/actions/dataActions';\n\nconst styles = {\n  progress: {\n    position: \"absolute\"\n  },\n  suggestButton: {\n    marginTop: '5px'\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '92%'\n  },\n  formControlSuggestion: {\n    marginTop: 20\n  },\n  submitButton: {\n    marginTop: 135\n  },\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  },\n  bodyText: {\n    textAlign: 'justify'\n  }\n};\n\nclass SuggestScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: 'EventHall',\n      loading: false,\n      open: false,\n      date: new Date(),\n      price: '',\n      location: false,\n      music: false,\n      photo: false,\n      entertainment: false,\n      others: false,\n      suggestionType: 'suggested',\n      screams: []\n    };\n\n    this.handleCheckedChange = event => {\n      this.setState({\n        [event.target.name]: event.target.checked\n      });\n      this.setState({\n        screams: []\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.setState({\n        screams: []\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      this.setState({\n        screams: []\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        date: date.toISOString()\n      });\n      this.setState({\n        screams: []\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false,\n        catgeory: 'EventHall',\n        date: new Date(),\n        price: '',\n        location: false,\n        music: false,\n        photo: false,\n        entertainment: false,\n        others: false,\n        suggestionType: 'suggested',\n        screams: []\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        loading: true,\n        screams: []\n      });\n      let criterias = {\n        date: this.state.date,\n        price: this.state.price,\n        location: this.state.location,\n        music: this.state.music,\n        photo: this.state.photo,\n        entertainment: this.state.entertainment,\n        others: this.state.others,\n        suggestionType: this.state.suggestionType\n      };\n      axios.post(`/screams/suggest`, criterias).then(res => {\n        this.setState({\n          screams: res.data\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      },\n      user: {\n        credentials\n      }\n    } = this.props;\n    const error = [this.state.location, this.state.music, this.state.photo, this.state.entertainment, this.state.others].filter(v => v).length < 1;\n    const buttonSubmit = error ? React.createElement(Button, {\n      variant: \"contained\",\n      disabled: true,\n      className: classes.submitButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Show me\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      className: classes.submitButton,\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Show me\", this.state.loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n    const screamMarkup = this.state.screams.length > 0 ? this.state.screams.map(scream => React.createElement(Card, {\n      key: scream.screamId,\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      image: scream.userImage,\n      title: \"Profile Picture\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${scream.username}`,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, scream.username), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, scream.name), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, dayjs(scream.createdAt).fromNow()), React.createElement(Typography, {\n      className: classes.bodyText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, scream.body), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Price: \", scream.price, \" \\u20AC\"), React.createElement(LikeButton, {\n      screamId: scream.screamId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, scream.likeCount, \" Likes\"), React.createElement(MyButton, {\n      tip: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, scream.commentCount, \" Comments\"), credentials.userType === 'Married To Be' ? React.createElement(BookScream, {\n      screamId: scream.screamId,\n      date: this.state.date.toString(),\n      price: scream.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }) : null))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"No available services\");\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })) : React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      name: \"date\",\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disablePast: true,\n      name: \"date\",\n      margin: \"normal\",\n      format: \"MM/dd/yyyy\",\n      value: this.state.date,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), buttonSubmit), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      name: \"price\",\n      type: \"text\",\n      label: \"Add a price\",\n      placeholder: \"Maximum Price\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      name: \"suggestionType\",\n      className: classes.formControlSuggestion,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Suggestion Type\"), React.createElement(Select, {\n      name: \"suggestionType\",\n      value: this.state.suggestionType,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 'low',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Lowest Price\"), React.createElement(MenuItem, {\n      value: 'suggested',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Suggested\"), React.createElement(MenuItem, {\n      value: 'high',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Higher Price\")))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      name: \"category\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Select, {\n      name: \"category\",\n      value: this.state.category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 'EventHall',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Location / EventHall\"), React.createElement(MenuItem, {\n      value: 'Music',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Music\"), React.createElement(MenuItem, {\n      value: 'Photo & Video',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Photo & Video\"), React.createElement(MenuItem, {\n      value: 'Entertainment',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Entertainment\"), React.createElement(MenuItem, {\n      value: 'Others',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Others\")))), screamMarkup);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: this.handleOpen,\n      className: classes.suggestButton,\n      startIcon: React.createElement(EmojiObjectsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Suggest me a service!\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nSuggestScreamDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(SuggestScreamDialog));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/SuggestScreamDialog.js"],"names":["React","Component","Fragment","withStyles","PropTypes","dayjs","MyButton","Grid","axios","Link","BookScream","LikeButton","Button","EmojiObjectsIcon","CloseIcon","TextField","Dialog","DialogContent","CircularProgress","FormControl","FormGroup","FormControlLabel","Checkbox","FormHelperText","Card","CardContent","CardMedia","Typography","ChatIcon","InputLabel","MenuItem","Select","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","connect","styles","progress","position","suggestButton","marginTop","dialogContent","padding","closeButton","left","formControlSuggestion","submitButton","card","display","marginBottom","image","minWidth","content","objectFit","bodyText","textAlign","SuggestScreamDialog","state","category","loading","open","date","Date","price","location","music","photo","entertainment","others","suggestionType","screams","handleCheckedChange","event","setState","target","name","checked","handleOpen","handleChange","value","handleDateChange","toISOString","handleClose","catgeory","handleSubmit","criterias","post","then","res","data","catch","err","console","error","render","classes","UI","user","credentials","props","filter","v","length","buttonSubmit","screamMarkup","map","scream","screamId","userImage","username","createdAt","fromNow","body","likeCount","commentCount","userType","toString","dialogMarkup","spinnerDiv","formControl","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport MyButton from '../../util/MyButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport BookScream from './BookScream';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\n\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography  from '@material-ui/core/Typography'\r\nimport ChatIcon from '@material-ui/icons/Chat'; \r\n\r\n\r\n\r\n//select\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//MUI Pickers\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\n// import {bookScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    progress: {\r\n        position: \"absolute\",\r\n    },\r\n    suggestButton: {\r\n        marginTop: '5px',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '92%'\r\n    },\r\n    formControlSuggestion: {\r\n        marginTop: 20\r\n    },\r\n    submitButton: {\r\n        marginTop: 135\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    bodyText:{\r\n        textAlign: 'justify'\r\n    }\r\n}\r\n\r\nclass SuggestScreamDialog extends Component {\r\n\r\n    state = {\r\n        category: 'EventHall',\r\n        loading: false,\r\n        open: false,\r\n        date: new Date(),\r\n        price: '',\r\n        location: false,\r\n        music: false,\r\n        photo: false,\r\n        entertainment: false,\r\n        others: false,\r\n        suggestionType: 'suggested',\r\n        screams: []\r\n    };\r\n\r\n    handleCheckedChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.checked});\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        this.setState({screams: []});\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({date: date.toISOString()});\r\n        this.setState({screams: []});\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            catgeory: 'EventHall',\r\n            date: new Date(),\r\n            price: '',\r\n            location: false,\r\n            music: false,\r\n            photo: false,\r\n            entertainment: false,\r\n            others: false,\r\n            suggestionType: 'suggested',\r\n            screams: []})\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit = () => {\r\n        this.setState({loading: true, screams: []});\r\n        let criterias = {\r\n            date: this.state.date,\r\n            price: this.state.price,\r\n            location: this.state.location,\r\n            music: this.state.music,\r\n            photo: this.state.photo,\r\n            entertainment: this.state.entertainment,\r\n            others: this.state.others,\r\n            suggestionType: this.state.suggestionType\r\n        }\r\n        axios.post(`/screams/suggest`, criterias)\r\n        .then(res => {\r\n            this.setState({screams: res.data});\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes, UI: {loading}, user: {credentials}} = this.props;\r\n        const error = [this.state.location, this.state.music, this.state.photo, this.state.entertainment, this.state.others].filter((v) => v).length < 1;\r\n        const buttonSubmit = error ? (<Button variant=\"contained\" disabled className={classes.submitButton}>\r\n        Show me\r\n      </Button>) : (<Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} className={classes.submitButton} disabled={this.state.loading}>\r\n            Show me\r\n            {this.state.loading && (\r\n                <CircularProgress size={30} className={classes.progress}/>\r\n            )} \r\n        </Button>);\r\n        const screamMarkup = this.state.screams.length > 0 ?(this.state.screams.map(scream => (\r\n            <Card key={scream.screamId} className={classes.card}>\r\n                <CardMedia image={scream.userImage} title=\"Profile Picture\" className={classes.image}/>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" component={Link} to={`/users/${scream.username}`} color=\"primary\">{scream.username}</Typography>\r\n                    <Typography variant=\"h6\">{scream.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(scream.createdAt).fromNow()}</Typography>\r\n                    <Typography className={classes.bodyText} variant=\"body1\">{scream.body}</Typography>\r\n                    <Typography variant=\"h6\">Price: {scream.price} €</Typography>\r\n                    <LikeButton screamId={scream.screamId}/>\r\n                    <span>{scream.likeCount} Likes</span>\r\n                    <MyButton tip=\"Comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{scream.commentCount} Comments</span>\r\n                    {credentials.userType === 'Married To Be' ? (<BookScream screamId={scream.screamId} date={this.state.date.toString()} price={scream.price}/>) : null}\r\n                </CardContent>\r\n            </Card>\r\n            ))) : (<p>No available services</p>);\r\n\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n               <CircularProgress size={150} thickness={2}/>\r\n            </div>\r\n        ) : (\r\n            <Grid container spacing={2}>\r\n               <Grid item xs={4}>\r\n                    <MuiPickersUtilsProvider name=\"date\" utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker \r\n                        disablePast\r\n                        name=\"date\"\r\n                        margin=\"normal\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    {buttonSubmit}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField variant=\"outlined\" name=\"price\" type=\"text\" label=\"Add a price\" placeholder=\"Maximum Price\" onChange={this.handleChange}/>\r\n\r\n                        <FormControl name=\"suggestionType\" className={classes.formControlSuggestion} fullWidth>\r\n                                <InputLabel>Suggestion Type</InputLabel>\r\n                                <Select name=\"suggestionType\" value={this.state.suggestionType} onChange={this.handleChange}>\r\n                                    <MenuItem value={'low'}>Lowest Price</MenuItem>\r\n                                    <MenuItem value={'suggested'}>Suggested</MenuItem>\r\n                                    <MenuItem value={'high'}>Higher Price</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                    <FormControl name=\"category\" className={classes.formControl}>\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select name=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                            <MenuItem value={'EventHall'}>Location / EventHall</MenuItem>\r\n                            <MenuItem value={'Music'}>Music</MenuItem>\r\n                            <MenuItem value={'Photo & Video'}>Photo & Video</MenuItem>\r\n                            <MenuItem value={'Entertainment'}>Entertainment</MenuItem>\r\n                            <MenuItem value={'Others'}>Others</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                {screamMarkup}\r\n            </Grid>\r\n        );\r\n\r\n        \r\n        return (\r\n            <Fragment>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleOpen} className={classes.suggestButton} startIcon={<EmojiObjectsIcon />}>\r\n                    Suggest me a service!\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nSuggestScreamDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SuggestScreamDialog));"]},"metadata":{},"sourceType":"module"}