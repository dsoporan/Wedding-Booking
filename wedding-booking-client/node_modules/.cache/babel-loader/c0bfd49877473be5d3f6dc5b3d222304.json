{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\EditScream.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport TextField from '@material-ui/core/TextField'; //MUI stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport Button from '@material-ui/core/Button'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Edit from '@material-ui/icons/Edit'; //redux\n\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\nconst styles = {\n  closeButton: {\n    position: 'absolute',\n    left: '90%'\n  },\n  editButton: {\n    position: 'absolute',\n    left: '84%',\n    top: '10%'\n  },\n  dialogContent: {\n    padding: 20\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  divText: {\n    marginTop: '10px'\n  },\n  invisibleSeparator: {\n    border: 'none',\n    margin: 10\n  }\n};\n\nclass EditScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: '',\n      name: '',\n      body: '',\n      price: '',\n      busyDates: [],\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        username,\n        screamId\n      } = this.props;\n      let newPath = `/users/${username}/scream/${screamId}`;\n\n      if (oldPath === newPath) {\n        oldPath = `/users/${username}`;\n      }\n\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n      const {\n        scream: {\n          name,\n          body,\n          price,\n          busyDates\n        }\n      } = this.props;\n      console.log(name);\n      console.log(body);\n      console.log(price);\n      console.log(busyDates);\n      this.setState({\n        name: name,\n        body: body,\n        price: price,\n        busyDates: busyDates\n      });\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n\n    this.handleDayClick = (day, {\n      selected\n    }) => {\n      const {\n        busyDates\n      } = this.state;\n\n      if (selected) {\n        const selectedIndex = busyDates.findIndex(selectedDay => DateUtils.isSameDay(selectedDay, day));\n        busyDates.splice(selectedIndex, 1);\n      } else {\n        busyDates.push(day);\n      }\n\n      this.setState({\n        busyDates\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    let transformDate = [];\n\n    if (this.state.busyDates) {\n      this.state.busyDates.forEach(date => {\n        transformDate.push(new Date(date));\n      });\n    }\n\n    console.log(this.state.name);\n    console.log(this.state.body);\n    console.log(this.state.price);\n    console.log(this.state.busyDates);\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"name\",\n      type: \"text\",\n      label: \"Edit Name\",\n      placeholder: \"Edit Name\",\n      value: this.state.name,\n      error: errors.name ? true : false,\n      helperText: errors.name,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Edit Body\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"Edit Body\",\n      value: this.state.body,\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"price\",\n      type: \"text\",\n      label: \"Edit Price\",\n      placeholder: \"\\u20AC\",\n      value: this.state.price,\n      error: errors.price ? true : false,\n      helperText: errors.price,\n      className: classes.textField,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.divText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Choose the dates that you are not available:\")), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(DayPicker, {\n      className: classes.dayPicker,\n      disabledDays: {\n        before: new Date()\n      },\n      selectedDays: transformDate,\n      onDayClick: this.handleDayClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Submit\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Edit Post\",\n      tipClassName: classes.editButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Edit, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nEditScream.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(EditScream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/EditScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","TextField","Dialog","DialogContent","CircularProgress","DayPicker","DateUtils","Button","CloseIcon","Edit","connect","getScream","clearErrors","styles","closeButton","position","left","editButton","top","dialogContent","padding","spinnerDiv","textAlign","marginTop","marginBottom","divText","invisibleSeparator","border","margin","EditScream","state","open","oldPath","newPath","name","body","price","busyDates","errors","handleOpen","window","location","pathname","username","screamId","props","history","pushState","setState","scream","console","log","handleClose","handleDayClick","day","selected","selectedIndex","findIndex","selectedDay","isSameDay","splice","push","componentDidMount","openDialog","render","classes","UI","loading","transformDate","forEach","date","Date","dialogMarkup","handleSubmit","textField","handleChange","dayPicker","before","submitButton","progressSpinner","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//MUI stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {getScream, clearErrors} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left : '90%'\r\n    },\r\n    editButton: {\r\n        position: 'absolute',\r\n        left: '84%',\r\n        top: '10%',\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    divText: {\r\n        marginTop: '10px',\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 10\r\n    },\r\n}\r\n\r\nclass EditScream extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: '',\r\n        name: '',\r\n        body: '',\r\n        price: '',\r\n        busyDates: [],\r\n        errors: {}\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {username, screamId} = this.props;\r\n        let newPath = `/users/${username}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath){\r\n            oldPath = `/users/${username}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getScream(this.props.screamId);\r\n        const {scream: {name, body, price, busyDates}} = this.props;\r\n        console.log(name);\r\n        console.log(body);\r\n        console.log(price);\r\n        console.log(busyDates);\r\n        this.setState({\r\n            name: name,\r\n            body: body, \r\n            price: price, \r\n            busyDates: busyDates});\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({open:false});\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    handleDayClick = (day, { selected }) => {\r\n        const { busyDates } = this.state;\r\n        if (selected) {\r\n          const selectedIndex = busyDates.findIndex(selectedDay =>\r\n            DateUtils.isSameDay(selectedDay, day)\r\n          );\r\n          busyDates.splice(selectedIndex, 1);\r\n        } else {\r\n          busyDates.push(day);\r\n        }\r\n        this.setState({ busyDates });\r\n      }\r\n\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        const {classes, UI: {loading}} = this.props;\r\n        let transformDate = [];\r\n        if (this.state.busyDates){\r\n            this.state.busyDates.forEach(date => {\r\n                transformDate.push(new Date(date));   \r\n            })\r\n        }\r\n        console.log(this.state.name);\r\n        console.log(this.state.body);\r\n        console.log(this.state.price);\r\n        console.log(this.state.busyDates);\r\n\r\n         const dialogMarkup = loading ? (\r\n             <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={150} thickness={2}/>\r\n             </div>\r\n         ) : (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <TextField name=\"name\" type=\"text\" label=\"Edit Name\" placeholder=\"Edit Name\" value={this.state.name} error={errors.name ? true : false}\r\n                helperText={errors.name} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <TextField name=\"body\" type=\"text\" label=\"Edit Body\" multiline rows=\"3\" placeholder=\"Edit Body\" value={this.state.body} error={errors.body ? true : false}\r\n                helperText={errors.body} className={classes.textField} onChange={this.handleChange} fullWidth/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <TextField name=\"price\" type=\"text\" label=\"Edit Price\" placeholder=\"€\" value={this.state.price} error={errors.price ? true : false}\r\n                helperText={errors.price} className={classes.textField} onChange={this.handleChange}/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <div className={classes.divText}>\r\n                    <span>Choose the dates that you are not available:</span>\r\n                </div>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <DayPicker className={classes.dayPicker} disabledDays={{ before: new Date() }} selectedDays={transformDate} onDayClick={this.handleDayClick}/>\r\n                <hr className={classes.invisibleSeparator}/>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                Submit\r\n                {loading && (\r\n                    <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                )}\r\n                </Button>\r\n            </form>\r\n         )\r\n\r\n\r\n         return (\r\n            <Fragment>\r\n                 <MyButton onClick={this.handleOpen} tip=\"Edit Post\" tipClassName={classes.editButton}>\r\n                     <Edit color=\"primary\"/>\r\n                 </MyButton>\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                 </Dialog>\r\n             </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditScream.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(EditScream));\r\n"]},"metadata":{},"sourceType":"module"}