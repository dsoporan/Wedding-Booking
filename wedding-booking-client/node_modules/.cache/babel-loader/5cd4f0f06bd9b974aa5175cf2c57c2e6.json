{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\BookScream.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs'; //Mui Stuff\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { connect } from 'react-redux';\nimport { bookScream } from '../../redux/actions/dataActions';\nconst styles = {\n  bookButton: {\n    marginLeft: 20\n  }\n};\n\nclass BookScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.bookScream = () => {\n      const {\n        user,\n        date\n      } = this.props;\n      const dateTransformed = new Date(date).toISOString();\n      this.props.bookScream(this.props.bookScream, {\n        username: user.credentials.username,\n        date: dateTransformed\n      });\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      date,\n      price\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleOpen,\n      className: classes.bookButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"BOOK IT\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Are you sure you want to book this service in \", dayjs(new Date(date)).format('DD MMMM YYYY'), \" for \", price, \"\\u20AC?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.bookScream,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Book\"))));\n  }\n\n}\n\nBookScream.propTypes = {\n  bookScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  bookScream\n})(withStyles(styles)(BookScream));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/BookScream.js"],"names":["React","Component","Fragment","withStyles","PropTypes","dayjs","Button","Dialog","DialogTitle","DialogActions","connect","bookScream","styles","bookButton","marginLeft","BookScream","state","open","handleOpen","setState","handleClose","user","date","props","dateTransformed","Date","toISOString","username","credentials","render","classes","price","format","propTypes","func","isRequired","screamId","string","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bookScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    bookButton: {\r\n        marginLeft: 20,\r\n    },\r\n}\r\n\r\nclass BookScream extends Component {\r\n\r\n    state = {\r\n        open: false\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    bookScream = () => {\r\n        const {user, date} = this.props;\r\n        const dateTransformed = (new Date(date)).toISOString();\r\n        this.props.bookScream(this.props.bookScream, {\r\n            username: user.credentials.username,\r\n            date: dateTransformed\r\n            });\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes, date, price} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleOpen} className={classes.bookButton}> \r\n                BOOK IT\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <DialogTitle>\r\n                        Are you sure you want to book this service in {dayjs(new Date(date)).format('DD MMMM YYYY')} for {price}â‚¬?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.bookScream} color=\"primary\">\r\n                            Book\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nBookScream.propTypes = {\r\n    bookScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    price: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {bookScream})(withStyles(styles)(BookScream));"]},"metadata":{},"sourceType":"module"}