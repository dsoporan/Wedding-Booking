{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\thesisGIT\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; //redux\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\nconst styles = {};\nexport class CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: '',\n      errors: {},\n      loading: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      this.props.submitComment(this.props.screamId, {\n        body: this.state.body\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authenticated\n    } = this.props;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Comment on scream\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })) : null;\n    return commentFormMarkup;\n  }\n\n}\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/thesisGIT/wedding-booking-client/src/components/scream/CommentForm.js"],"names":["React","Component","PropTypes","withStyles","CircularProgress","Button","Grid","TextField","connect","submitComment","styles","CommentForm","state","body","errors","loading","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","screamId","componentWillReceiveProps","nextProps","UI","render","classes","authenticated","commentFormMarkup","textAlign","comment","textField","button","visibleSeparator","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\n//MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {submitComment} from '../../redux/actions/dataActions'; \r\n\r\nconst styles = {\r\n\r\n}\r\n\r\nexport class CommentForm extends Component {\r\n    state = {\r\n        body: '',\r\n        errors: {},\r\n        loading: false,\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors});\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({loading: true});\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.screamId, {body: this.state.body});\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    render() {\r\n        const {classes, authenticated} = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{textAlign: 'center'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField name=\"body\" type=\"text\" label=\"Comment on scream\" error={errors.comment ? true : false}\r\n                     helperText={errors.comment} value={this.state.body} onChange={this.handleChange} fullWidth className={classes.textField}/>\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} disabled={loading}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n                <hr className={classes.visibleSeparator}/>\r\n            </Grid>\r\n        ) : null\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment : PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\r\n"]},"metadata":{},"sourceType":"module"}