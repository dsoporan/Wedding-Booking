{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\thesisGIT\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs'; //Mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nconst styles = {\n  commentImage: {\n    maxWidth: '100%',\n    height: 100,\n    objectFit: 'cover',\n    borderRadius: '50%'\n  },\n  commentData: {\n    marginLeft: 20\n  },\n  visibleSeparator: {\n    width: '100%',\n    borderBottom: '1px solid rgba(0,0,0,0.1)',\n    marginBottom: 20\n  },\n  invisibleSeparator: {\n    border: 'none',\n    margin: 4\n  }\n};\n\nclass Comments extends Component {\n  render() {\n    const {\n      classes,\n      comments\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, comments.map((comment, index) => {\n      const {\n        body,\n        createdAt,\n        userImage,\n        username\n      } = comment;\n      return React.createElement(Fragment, {\n        key: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userImage,\n        alt: \"comment\",\n        className: classes.commentImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.commentData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: Link,\n        to: `users/${username}`,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, username), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, body))))), index !== comments.length - 1 && React.createElement(\"hr\", {\n        className: classes.visibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["C:/Users/Darian/Desktop/thesisGIT/wedding-booking-client/src/components/scream/Comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","Grid","Typography","styles","commentImage","maxWidth","height","objectFit","borderRadius","commentData","marginLeft","visibleSeparator","width","borderBottom","marginBottom","invisibleSeparator","border","margin","Comments","render","classes","comments","props","map","comment","index","body","createdAt","userImage","username","format","length","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\n//Mui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    }\r\n}\r\n\r\nclass Comments extends Component {\r\n\r\n    render(){\r\n        const { classes, comments } = this.props;\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const {body, createdAt, userImage, username} = comment;\r\n                    return(\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography variant=\"h5\" component={Link} to={`users/${username}`}\r\n                                            color=\"primary\">\r\n                                                {username}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeparator}/>\r\n                                            <Typography variant=\"body1\">\r\n                                                {body}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length - 1 && (\r\n                                <hr className={classes.visibleSeparator}/>\r\n                            )}\r\n                        </Fragment>\r\n\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments);"]},"metadata":{},"sourceType":"module"}