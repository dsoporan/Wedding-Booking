{"ast":null,"code":"import { SET_AUTHENTICATED, SET_UNAUTHENTICATED, SET_USER, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_SCREAM:\n      return { ...state,\n        likes: [...state.likes, {\n          username: state.credentials.username,\n          screamId: action.payload.screamId\n        }]\n      };\n\n    case UNLIKE_SCREAM:\n      return { ...state,\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(notifiation => notification.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Darian/Desktop/thesisGIT/wedding-booking-client/src/redux/reducers/userReducer.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","LOADING_USER","LIKE_SCREAM","UNLIKE_SCREAM","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","username","screamId","filter","like","MARK_NOTIFICATIONS_READ","forEach","notifiation","notification","read"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,mBAA3B,EAAgDC,QAAhD,EAA0DC,YAA1D,EAAwEC,WAAxE,EAAqFC,aAArF,QAAyG,UAAzG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE;AALE,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,iBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHL,QAAAA,aAAa,EAAE;AAFZ,OAAP;;AAIJ,SAAKN,mBAAL;AACI,aAAOK,YAAP;;AACJ,SAAKJ,QAAL;AACI,aAAO;AACHK,QAAAA,aAAa,EAAE,IADZ;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGH,WAAGK,MAAM,CAACE;AAHP,OAAP;;AAKJ,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEH;AACIM,UAAAA,QAAQ,EAAEJ,KAAK,CAACH,WAAN,CAAkBO,QADhC;AAEIC,UAAAA,QAAQ,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAF7B,SAFG;AAFJ,OAAP;;AAUJ,SAAKZ,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACF,QAAL,KAAkBJ,MAAM,CAACE,OAAP,CAAeE,QAA5D;AAFJ,OAAP;;AAIJ,SAAKG,uBAAL;AACIR,MAAAA,KAAK,CAACD,aAAN,CAAoBU,OAApB,CAA4BC,WAAW,IAAIC,YAAY,CAACC,IAAb,GAAoB,IAA/D;AACA,aAAO,EACH,GAAGZ;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAzCR;AA2CH","sourcesContent":["import {SET_AUTHENTICATED, SET_UNAUTHENTICATED, SET_USER, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM} from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        username: state.credentials.username,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\r\n            }\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(notifiation => notification.read = true);\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}