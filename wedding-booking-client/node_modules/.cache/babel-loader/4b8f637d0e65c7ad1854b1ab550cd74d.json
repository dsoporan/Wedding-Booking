{"ast":null,"code":"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA } from '../types';\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, actions) {\n  switch (actions.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["C:/Users/Darian/Desktop/Thesis/wedding-booking-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","initialState","screams","scream","loading","state","actions","type","action","payload","index","findIndex","screamId"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,YAAjD,QAAoE,UAApE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,OAA/B,EAAuC;AAClD,UAAOA,OAAO,CAACC,IAAf;AACI,SAAKP,YAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,OAAO,EAAC;AAFL,OAAP;;AAIJ,SAAKP,WAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,OAAO,EAAEM,MAAM,CAACC,OAFd;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKN,WAAL;AACA,SAAKC,aAAL;AACI,UAAIW,KAAK,GAAGL,KAAK,CAACH,OAAN,CAAcS,SAAd,CAAyBR,MAAD,IAAYA,MAAM,CAACS,QAAP,KAAoBJ,MAAM,CAACC,OAAP,CAAeG,QAAvE,CAAZ;AACAP,MAAAA,KAAK,CAACH,OAAN,CAAcQ,KAAd,IAAuBF,MAAM,CAACC,OAA9B;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;AAhBR;AAqBH","sourcesContent":["import {SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA} from '../types';\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, actions){\r\n    switch(actions.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}