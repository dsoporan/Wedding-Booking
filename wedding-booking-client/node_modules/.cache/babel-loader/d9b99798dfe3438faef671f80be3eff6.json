{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darian\\\\Desktop\\\\nou\\\\thesis\\\\wedding-booking-client\\\\src\\\\components\\\\scream\\\\SuggestScreamDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport MyButton from '../../util/MyButton';\nimport DialogContent from '@material-ui/core/DialogContent'; //Mui Stuff\n\nimport Button from '@material-ui/core/Button';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { connect } from 'react-redux'; // import {bookScream} from '../../redux/actions/dataActions';\n\nconst styles = {\n  bookButton: {\n    marginLeft: 20\n  }\n};\n\nclass SuggestScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 150,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })) : null;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: this.handleOpen,\n      className: classes.button,\n      startIcon: React.createElement(EmojiObjectsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Suggest me a service!\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nSuggestScreamDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // user: state.user\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(SuggestScreamDialog));","map":{"version":3,"sources":["C:/Users/Darian/Desktop/nou/thesis/wedding-booking-client/src/components/scream/SuggestScreamDialog.js"],"names":["React","Component","Fragment","withStyles","PropTypes","dayjs","MyButton","DialogContent","Button","EmojiObjectsIcon","CloseIcon","Dialog","DialogTitle","DialogActions","connect","styles","bookButton","marginLeft","SuggestScreamDialog","state","open","handleOpen","setState","handleClose","render","classes","UI","loading","props","dialogMarkup","spinnerDiv","button","closeButton","dialogContent","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport MyButton from '../../util/MyButton';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\n\r\n\r\n//Mui Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport {connect} from 'react-redux';\r\n// import {bookScream} from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    bookButton: {\r\n        marginLeft: 20,\r\n    },\r\n}\r\n\r\nclass SuggestScreamDialog extends Component {\r\n\r\n    state = {\r\n        open: false\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes, UI: {loading}} = this.props;\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n               <CircularProgress size={150} thickness={2}/>\r\n            </div>\r\n        ) : null;\r\n        return (\r\n            <Fragment>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleOpen} className={classes.button} startIcon={<EmojiObjectsIcon />}>\r\n                    Suggest me a service!\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nSuggestScreamDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    // user: state.user\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SuggestScreamDialog));"]},"metadata":{},"sourceType":"module"}